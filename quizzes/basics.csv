NewQuestion,MC
QuestionText,""No magic constants" means you should not...?"
Points,1
Option,100 , " scatter constants like 7, 12, or 3.14 through your program "
Option,0 , " define constants to have values like "Harry Potter" "
Option,0 , " use integer values in your code "
Option,0 , " use an irrational number in your code "
Option,0 , " None "
NewQuestion,MC
QuestionText,"Our functions should...?"
Points,1
Option,0 , " precisely embody the mathematical notion of a function "
Option,0 , " do as many tasks as possible, since functions calls take time "
Option,100 , " do one clearly definable task "
Option,0 , " none of the above "
Option,0 , " None "
NewQuestion,MC
QuestionText,"PEP 8 recommends that when indenting, we should use..?"
Points,1
Option,0 , " tabs "
Option,100 , " spaces "
Option,0 , " underscores "
Option,0 , " asterisks "
Option,0 , " None "
NewQuestion,MC
QuestionText,"When it comes to naming variables, we should...?"
Points,1
Option,0 , " always use camel case "
Option,0 , " always employ underscores "
Option,0 , " keep everything in ALL Caps "
Option,100 , " use the convention most widespread in our coding language "
Option,0 , " None "
NewQuestion,MC
QuestionText,"Comments should be...?"
Points,1
Option,100 , " employed only when necessary "
Option,0 , " scattered through the code as widely as possible "
Option,0 , " used for every line of code "
Option,0 , " never used at all "
Option,0 , " None "
NewQuestion,MC
QuestionText,"The best way to make your code understandable is...?"
Points,1
Option,0 , " to use as many comments as possible "
Option,0 , " to use the longest variable names possible "
Option,100 , " to write clear code "
Option,0 , " none of the above "
Option,0 , " None "
NewQuestion,MC
QuestionText,"The most important reason to use consistent indentation is...?"
Points,1
Option,100 , " it makes it easy for readers to see the control blocks "
Option,0 , " to pass the tests of code-style tools "
Option,0 , " it looks prettier that way "
Option,0 , " all of the above "
Option,0 , " None "
NewQuestion,MC
QuestionText,"According to PEP 8, constants should...?"
Points,1
Option,100 , " BE_IN_ALL_CAPS "
Option,0 , " beInCamelCase "
Option,0 , " be_defined_with_underscores "
Option,0 , " be defined on a per project basis "
Option,0 , " None "
NewQuestion,MC
QuestionText,"If our program employs a database, we should define the data tables...?"
Points,1
Option,0 , " in our code "
Option,0 , " in the database "
Option,0 , " in both the code and database "
Option,100 , " in one place used by both our code and the database "
Option,0 , " None "
NewQuestion,MC
QuestionText,"Function and variable names should be...?"
Points,1
Option,0 , " as short as possible "
Option,0 , " as long as possible "
Option,100 , " hitting the mean between very short and very long "
Option,0 , " in all upper case "
Option,0 , " None "
NewQuestion,MC
QuestionText,"DRY means your code should ...?"
Points,1
Option,0 , " not be all wet "
Option,0 , " Delete Random Years "
Option,0 , " Dally Really Youthfully "
Option,100 , " not repeat itself "
Option,0 , " None "
NewQuestion,MC
QuestionText,"PEP 8 recommends using blank lines in functions...?"
Points,1
Option,0 , " whenever the heck you want to "
Option,100 , " sparingly, to indicate logical sections "
Option,0 , " never "
Option,0 , " as much as possible "
Option,0 , " None "
NewQuestion,MC
QuestionText,"According to PEP 8, if we need a line break near a binary operator, it should come...?"
Points,1
Option,0 , " after the operator "
Option,100 , " before the operator "
Option,0 , " wherever looks good "
Option,0 , " nowhere: rewrite the code so you don't need it "
Option,0 , " None "
NewQuestion,MC
QuestionText,"Interfaces between modules should be...?"
Points,1
Option,100 , " narrow and well-defined "
Option,0 , " broad and consistent "
Option,0 , " narrow and vague "
Option,0 , " free form "
Option,0 , " non-existent "
NewQuestion,MC
QuestionText,"You should test your program...?"
Points,1
Option,0 , " only when completely done "
Option,100 , " after every few lines of code you write "
Option,0 , " never: that is the job of the testers "
Option,0 , " rarely: testing wastes time you should be using to code "
Option,0 , " None "
NewQuestion,MC
QuestionText,"An important feature of modular programming is...?"
Points,1
Option,0 , " to allow one module to see all data in another module "
Option,0 , " to allow modules to access as much of the code in other modules as possible "
Option,100 , " to allow one module to be coded with little knowledge of how other modules are coded "
Option,0 , " all of the above "
Option,0 , " None "
NewQuestion,MC
QuestionText,"Dijkstra, in "Goto considered harmful," claims that the programmer does NOT have control over...?"
Points,1
Option,100 , " the values of textual and dynamic indices "
Option,0 , " repetition clauses within the program "
Option,0 , " recursive procedures within the program "
Option,0 , " none of the above "
Option,0 , " None "
NewQuestion,MC
QuestionText,"Each module in modular decomposition should be...?"
Points,1
Option,0 , " dependent on other modules "
Option,0 , " responsible for multiple parts of a program "
Option,0 , " be as large as possible "
Option,100 , " small and simple enough "
Option,0 , " None "
NewQuestion,MC
QuestionText,"In the second modular decomposition described in the paper, the criterion used was...?"
Points,1
Option,0 , " to increase dependency between different modules compared to the first decomposition "
Option,0 , " to have as much processing done in the Alphabetizer module "
Option,100 , " information hiding "
Option,0 , " flowchart "
Option,0 , " None "
NewQuestion,MC
QuestionText,"In modularization, the data structure, with its accessing and modifying procedures, should...?"
Points,1
Option,0 , " be reused by different modules "
Option,0 , " be shared by all modules within the same class "
Option,0 , " be shared by many modules within a program "
Option,100 , " be a part of single module "
Option,0 , " None "
