Agile Development	A method of developing software featuring frequent releases, adaptability to change, and close collaboration with customers.
Containerization	The process of packaging an application and everything it depends upon in a "container," then running it in its own virtual environment.
Continuous Integration (CI)	The process of integrating different developers' work with high regularity.
Continuous Deployment (CD)	Regularly deploying new work into production, usually with every push to the master branch on the origin source-code control server.
Docker	The most popular tool for <i>containerizing</i> applications.
Kanban	A tool for controlling <i>work-in-progress</i> and making visible who is working on what tasks.
Kubernetes	An open-source tool for orchestrating containers.
Lean Development	Similar to Agile Development; strong inheritance from Toyota Production Systems
make	A venerable tool for automating builds.
Microservices	Tiny applications that do a single job, like authentication or scheduling deliveries.
Monitoring	Software that "watches" an application and sends out alerts at signs of trouble.
Slack	A popular tool for communication in development teams; also, the "empty" periods that are necessary in a schedule for anyone to do creative work.
Test-Driven Development	A method of developing software that writes tests for a new feature first, then writes the feature.
Toyota Production Systems (TPS)	A lean manufacturing system put in place at Toyota in the 1960s, featuring flexible production and employee empowerment.
Version Control	A tool that allows users to keep multiple versions of a file, revert to earlier versions, compare versions, and so on.
