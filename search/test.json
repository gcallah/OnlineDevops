[{"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Stub: a crude imitation of real object returning hard-coded values."}, "title": "code"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Why do we test?"}, "title": "test"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "We test to see if the software does what we want it to do."}, "title": "test"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Classic way to do testing: test cases, bugs, regression, growing \"regression debt\"."}, "title": "test"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Please study regression testing ."}, "title": "test"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-length feedback, developers can test and fix bugs immediately."}, "title": "test"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Test pyramid:Unit tests for individual classes and methods (models, controllers, views)Integration tests to check feature top-down."}, "title": "test"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Acceptance test to check feature as user sees it."}, "title": "test"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Fake: a real object created for the test."}, "title": "test"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Test suite: set of tests serving specific purpose."}, "title": "test"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Always: smoke test, main success [AKA happy path], extended tests."}, "title": "test"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Django benefits:No need to unit-test Models (except custom query sets & business logic methods)."}, "title": "test"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "No need to integration-test Autogenerated View (except live tests)."}, "title": "test"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Anatomy of test case:setUp()Test_whatYouTest_whatYouDo_whatYouExpect."}, "title": "test"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "For lazy guys -- AutoFixture :)fixture.create()Typical mistakes:Useless tests -- testing default Models methods, for example."}, "title": "test"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Large tests?"}, "title": "test"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Small tests -- 8-10 lines."}, "title": "test"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Add tests if there are custom methods."}, "title": "test"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Big idea: can we somehow make requirements document testable?"}, "title": "test"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Turning use cases into tests -- gherkinFeature file & stepsPassing info around -- contextSelenium -- driving real browser aroundBehave test runner (behave-Jango)JIRA: acceptance tests are now part of the Relying strictly on this type of testing is bad idea!"}, "title": "test"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "(See execution time for one test vs whole suite!)"}, "title": "test"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Lesson 2: Testing FrameworksPython testing with pytest!"}, "title": "test"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Part 1: Introductions and motivating testing."}, "title": "test"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Lesson 3: JenkinsJenkins is a CI/CD tool, but it is used to force the running of automated tests as part of the build process, so we have included it in this section."}, "title": "test"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Big idea: can we somehow make requirements document testable?"}, "title": "make"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "And we can relate this back to the discussion in chapter one on \"Taylorism\" versus \"Toyota Production System\": in the former, the \"workers\" just carry out the plans of the \"managers.\""}, "title": "one"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "In the latter, everyone is responsible for the entire production process."}, "title": "one"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "(See execution time for one test vs whole suite!)"}, "title": "one"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "A Crash Course in Continuous TestingThe Future of Continuous Testing: Fail FasterDesign for a Python-based spell checker (We want one of these for our web pages!"}, "title": "one"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Part of this is establishing a culture of trust: If we need to feed approval for each change through multiple levels of bureaucracy, we can't fix bugs right away."}, "title": "change"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Testing implementation -- method save_changes() returns OK -- everything is OK!"}, "title": "change"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "(Test should check if changes indeed persisted)."}, "title": "change"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Setting up Jenkins as a webhook in GitHubSlack notification plugin integration with JenkinsTesting and Continuous Integration Part 1Testing and Continuous Integration Part 2Testing only recently changed git files in jenkins"}, "title": "change"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Fixture: prepared data to be loaded into the db."}, "title": "data"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "tearDown()Preparing data -- AutoFixtureTaskModelTransactionTestCase(TransactionTestCase): regular fixture."}, "title": "data"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-length feedback, developers can test and fix bugs immediately."}, "title": "db"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Fixture: prepared data to be loaded into the db."}, "title": "db"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "And whenever it doesn't, what are the effects?"}, "title": "n't"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Part of this is establishing a culture of trust: If we need to feed approval for each change through multiple levels of bureaucracy, we can't fix bugs right away."}, "title": "n't"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Classic way to do testing: test cases, bugs, regression, growing \"regression debt\"."}, "title": "way"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Part of this is establishing a culture of trust: If we need to feed approval for each change through multiple levels of bureaucracy, we can't fix bugs right away."}, "title": "way"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Always: smoke test, main success [AKA happy path], extended tests."}, "title": "way"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Part of this is establishing a culture of trust: If we need to feed approval for each change through multiple levels of bureaucracy, we can't fix bugs right away."}, "title": "need"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Django benefits:No need to unit-test Models (except custom query sets & business logic methods)."}, "title": "need"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "No need to integration-test Autogenerated View (except live tests)."}, "title": "need"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Lesson 2: Testing FrameworksPython testing with pytest!"}, "title": "works"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-bug mindset: bugs are not tasks in backlog, you have to fix them as you go -- by the end of the day zero bugs exist."}, "title": "go"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Django benefits:No need to unit-test Models (except custom query sets & business logic methods)."}, "title": "go"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Create Controller (View as Django calls it)."}, "title": "go"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Write View (Template as Django calls it)."}, "title": "go"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Turning use cases into tests -- gherkinFeature file & stepsPassing info around -- contextSelenium -- driving real browser aroundBehave test runner (behave-Jango)JIRA: acceptance tests are now part of the Relying strictly on this type of testing is bad idea!"}, "title": "go"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "In the latter, everyone is responsible for the entire production process."}, "title": "every"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Testing implementation -- method save_changes() returns OK -- everything is OK!"}, "title": "every"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "And whenever it doesn't, what are the effects?"}, "title": "ever"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "In the latter, everyone is responsible for the entire production process."}, "title": "ever"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Testing implementation -- method save_changes() returns OK -- everything is OK!"}, "title": "ever"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "And whenever it doesn't, what are the effects?"}, "title": "never"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Create Controller (View as Django calls it)."}, "title": "call"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Write View (Template as Django calls it)."}, "title": "call"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "For lazy guys -- AutoFixture :)fixture.create()Typical mistakes:Useless tests -- testing default Models methods, for example."}, "title": "example"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Terminology:TestCase: set of checks to be performed."}, "title": "perform"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Lesson 3: JenkinsJenkins is a CI/CD tool, but it is used to force the running of automated tests as part of the build process, so we have included it in this section."}, "title": "used"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Test if it handles errors."}, "title": "hand"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Test pyramid:Unit tests for individual classes and methods (models, controllers, views)Integration tests to check feature top-down."}, "title": "mod"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-bug mindset: bugs are not tasks in backlog, you have to fix them as you go -- by the end of the day zero bugs exist."}, "title": "exist"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-length feedback, developers can test and fix bugs immediately."}, "title": "per"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Terminology:TestCase: set of checks to be performed."}, "title": "per"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "(Test should check if changes indeed persisted)."}, "title": "per"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Lesson 3: JenkinsJenkins is a CI/CD tool, but it is used to force the running of automated tests as part of the build process, so we have included it in this section."}, "title": "include"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-bug mindset: bugs are not tasks in backlog, you have to fix them as you go -- by the end of the day zero bugs exist."}, "title": "--"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Arrange -- Act -- Assert."}, "title": "--"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "tearDown()Preparing data -- AutoFixtureTaskModelTransactionTestCase(TransactionTestCase): regular fixture."}, "title": "--"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "For lazy guys -- AutoFixture :)fixture.create()Typical mistakes:Useless tests -- testing default Models methods, for example."}, "title": "--"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Testing implementation -- method save_changes() returns OK -- everything is OK!"}, "title": "--"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Refactoring:Small methods -- less than a screen."}, "title": "--"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Small tests -- 8-10 lines."}, "title": "--"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Turning use cases into tests -- gherkinFeature file & stepsPassing info around -- contextSelenium -- driving real browser aroundBehave test runner (behave-Jango)JIRA: acceptance tests are now part of the Relying strictly on this type of testing is bad idea!"}, "title": "--"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Part of this is establishing a culture of trust: If we need to feed approval for each change through multiple levels of bureaucracy, we can't fix bugs right away."}, "title": "app"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Always: smoke test, main success [AKA happy path], extended tests."}, "title": "app"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Acceptance test to check feature as user sees it."}, "title": "use"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Turning use cases into tests -- gherkinFeature file & stepsPassing info around -- contextSelenium -- driving real browser aroundBehave test runner (behave-Jango)JIRA: acceptance tests are now part of the Relying strictly on this type of testing is bad idea!"}, "title": "use"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Lesson 3: JenkinsJenkins is a CI/CD tool, but it is used to force the running of automated tests as part of the build process, so we have included it in this section."}, "title": "use"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Turning use cases into tests -- gherkinFeature file & stepsPassing info around -- contextSelenium -- driving real browser aroundBehave test runner (behave-Jango)JIRA: acceptance tests are now part of the Relying strictly on this type of testing is bad idea!"}, "title": "type"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Test pyramid:Unit tests for individual classes and methods (models, controllers, views)Integration tests to check feature top-down."}, "title": "control"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Fat controllers!"}, "title": "control"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-bug mindset: bugs are not tasks in backlog, you have to fix them as you go -- by the end of the day zero bugs exist."}, "title": "end"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Always: smoke test, main success [AKA happy path], extended tests."}, "title": "end"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Test pyramid:Unit tests for individual classes and methods (models, controllers, views)Integration tests to check feature top-down."}, "title": "feature"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Acceptance test to check feature as user sees it."}, "title": "feature"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "This is part of the \"incremental improvement\" idea: if we do continuous integration and continuous delivery with small batches, each delivery into production should produce at most a \"small batch\" of bugs!"}, "title": "produce"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Small tests -- 8-10 lines."}, "title": "lines"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Classic way to do testing: test cases, bugs, regression, growing \"regression debt\"."}, "title": "bugs"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-bug mindset: bugs are not tasks in backlog, you have to fix them as you go -- by the end of the day zero bugs exist."}, "title": "bugs"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "This is part of the \"incremental improvement\" idea: if we do continuous integration and continuous delivery with small batches, each delivery into production should produce at most a \"small batch\" of bugs!"}, "title": "bugs"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-length feedback, developers can test and fix bugs immediately."}, "title": "bugs"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Part of this is establishing a culture of trust: If we need to feed approval for each change through multiple levels of bureaucracy, we can't fix bugs right away."}, "title": "bugs"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "(Test should check if changes indeed persisted)."}, "title": "indeed"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Why preparing requirements still matters (\u201cPlease show balance\" in Danfoss)."}, "title": "still"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-bug mindset: bugs are not tasks in backlog, you have to fix them as you go -- by the end of the day zero bugs exist."}, "title": "day"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "No need to integration-test Autogenerated View (except live tests)."}, "title": "generate"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "This is part of the \"incremental improvement\" idea: if we do continuous integration and continuous delivery with small batches, each delivery into production should produce at most a \"small batch\" of bugs!"}, "title": "part"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Turning use cases into tests -- gherkinFeature file & stepsPassing info around -- contextSelenium -- driving real browser aroundBehave test runner (behave-Jango)JIRA: acceptance tests are now part of the Relying strictly on this type of testing is bad idea!"}, "title": "part"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Lesson 3: JenkinsJenkins is a CI/CD tool, but it is used to force the running of automated tests as part of the build process, so we have included it in this section."}, "title": "part"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Test pyramid:Unit tests for individual classes and methods (models, controllers, views)Integration tests to check feature top-down."}, "title": "classes"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Part of this is establishing a culture of trust: If we need to feed approval for each change through multiple levels of bureaucracy, we can't fix bugs right away."}, "title": "away"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Classic way to do testing: test cases, bugs, regression, growing \"regression debt\"."}, "title": "case"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Anatomy of test case:setUp()Test_whatYouTest_whatYouDo_whatYouExpect."}, "title": "case"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Turning use cases into tests -- gherkinFeature file & stepsPassing info around -- contextSelenium -- driving real browser aroundBehave test runner (behave-Jango)JIRA: acceptance tests are now part of the Relying strictly on this type of testing is bad idea!"}, "title": "case"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Test if it handles errors."}, "title": "error"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Lesson 3: JenkinsJenkins is a CI/CD tool, but it is used to force the running of automated tests as part of the build process, so we have included it in this section."}, "title": "running"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "For lazy guys -- AutoFixture :)fixture.create()Typical mistakes:Useless tests -- testing default Models methods, for example."}, "title": "mistakes"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Mock: an elegant imitation of the object (if real object is not yet ready or expensive)."}, "title": "read"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Write LiveTestCase using requirements."}, "title": "using"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Test pyramid:Unit tests for individual classes and methods (models, controllers, views)Integration tests to check feature top-down."}, "title": "methods"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Django benefits:No need to unit-test Models (except custom query sets & business logic methods)."}, "title": "methods"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "For lazy guys -- AutoFixture :)fixture.create()Typical mistakes:Useless tests -- testing default Models methods, for example."}, "title": "methods"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Refactoring:Small methods -- less than a screen."}, "title": "methods"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Add tests if there are custom methods."}, "title": "methods"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Lesson 3: JenkinsJenkins is a CI/CD tool, but it is used to force the running of automated tests as part of the build process, so we have included it in this section."}, "title": "automated"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Small tests -- 8-10 lines."}, "title": "line"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "This is part of the \"incremental improvement\" idea: if we do continuous integration and continuous delivery with small batches, each delivery into production should produce at most a \"small batch\" of bugs!"}, "title": "us"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Part of this is establishing a culture of trust: If we need to feed approval for each change through multiple levels of bureaucracy, we can't fix bugs right away."}, "title": "us"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "And we can relate this back to the discussion in chapter one on \"Taylorism\" versus \"Toyota Production System\": in the former, the \"workers\" just carry out the plans of the \"managers.\""}, "title": "us"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Acceptance test to check feature as user sees it."}, "title": "us"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Django benefits:No need to unit-test Models (except custom query sets & business logic methods)."}, "title": "us"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Add tests if there are custom methods."}, "title": "us"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Write LiveTestCase using requirements."}, "title": "us"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Turning use cases into tests -- gherkinFeature file & stepsPassing info around -- contextSelenium -- driving real browser aroundBehave test runner (behave-Jango)JIRA: acceptance tests are now part of the Relying strictly on this type of testing is bad idea!"}, "title": "us"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Lesson 3: JenkinsJenkins is a CI/CD tool, but it is used to force the running of automated tests as part of the build process, so we have included it in this section."}, "title": "us"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "A Crash Course in Continuous TestingThe Future of Continuous Testing: Fail FasterDesign for a Python-based spell checker (We want one of these for our web pages!"}, "title": "us"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Setting up Jenkins as a webhook in GitHubSlack notification plugin integration with JenkinsTesting and Continuous Integration Part 1Testing and Continuous Integration Part 2Testing only recently changed git files in jenkins"}, "title": "us"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Turning use cases into tests -- gherkinFeature file & stepsPassing info around -- contextSelenium -- driving real browser aroundBehave test runner (behave-Jango)JIRA: acceptance tests are now part of the Relying strictly on this type of testing is bad idea!"}, "title": "file"}, {"info": {"url": "http://127.0.0.1:8000/devops/test", "page": "automate test", "sentence": "Setting up Jenkins as a webhook in GitHubSlack notification plugin integration with JenkinsTesting and Continuous Integration Part 1Testing and Continuous Integration Part 2Testing only recently changed git files in jenkins"}, "title": "file"}]