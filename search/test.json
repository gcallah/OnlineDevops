[{"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-bug mindset: bugs are not tasks in backlog, you have to fix them as you go -- by the end of the day zero bugs exist."}, "title": "--"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Arrange -- Act -- Assert."}, "title": "--"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "tearDown()Preparing data -- AutoFixtureTaskModelTransactionTestCase(TransactionTestCase): regular fixture."}, "title": "--"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "For lazy guys -- AutoFixture :)fixture.create()Typical mistakes:Useless tests -- testing default Models methods, for example."}, "title": "--"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Testing implementation -- method save_changes() returns OK -- everything is OK!"}, "title": "--"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Refactoring:Small methods -- less than a screen."}, "title": "--"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Small tests -- 8-10 lines."}, "title": "--"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Turning use cases into tests -- gherkinFeature file & stepsPassing info around -- contextSelenium -- driving real browser aroundBehave test runner (behave-Jango)JIRA: acceptance tests are now part of the Relying strictly on this type of testing is bad idea!"}, "title": "--"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Test pyramid:Unit tests for individual classes and methods (models, controllers, views)Integration tests to check feature top-down."}, "title": "tests"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Test suite: set of tests serving specific purpose."}, "title": "tests"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Always: smoke test, main success [AKA happy path], extended tests."}, "title": "tests"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "No need to integration-test Autogenerated View (except live tests)."}, "title": "tests"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "For lazy guys -- AutoFixture :)fixture.create()Typical mistakes:Useless tests -- testing default Models methods, for example."}, "title": "tests"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Large tests?"}, "title": "tests"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Small tests -- 8-10 lines."}, "title": "tests"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Add tests if there are custom methods."}, "title": "tests"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Turning use cases into tests -- gherkinFeature file & stepsPassing info around -- contextSelenium -- driving real browser aroundBehave test runner (behave-Jango)JIRA: acceptance tests are now part of the Relying strictly on this type of testing is bad idea!"}, "title": "tests"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Lesson 3: JenkinsJenkins is a CI/CD tool, but it is used to force the running of automated tests as part of the build process, so we have included it in this section."}, "title": "tests"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Why do we test?"}, "title": "test"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "We test to see if the software does what we want it to do."}, "title": "test"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Classic way to do testing: test cases, bugs, regression, growing \"regression debt\"."}, "title": "test"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Please study regression testing ."}, "title": "test"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-length feedback, developers can test and fix bugs immediately."}, "title": "test"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Test pyramid:Unit tests for individual classes and methods (models, controllers, views)Integration tests to check feature top-down."}, "title": "test"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Acceptance test to check feature as user sees it."}, "title": "test"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Fake: a real object created for the test."}, "title": "test"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Test suite: set of tests serving specific purpose."}, "title": "test"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Always: smoke test, main success [AKA happy path], extended tests."}, "title": "test"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Django benefits:No need to unit-test Models (except custom query sets & business logic methods)."}, "title": "test"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "No need to integration-test Autogenerated View (except live tests)."}, "title": "test"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Anatomy of test case:setUp()Test_whatYouTest_whatYouDo_whatYouExpect."}, "title": "test"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "For lazy guys -- AutoFixture :)fixture.create()Typical mistakes:Useless tests -- testing default Models methods, for example."}, "title": "test"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Large tests?"}, "title": "test"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Small tests -- 8-10 lines."}, "title": "test"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Add tests if there are custom methods."}, "title": "test"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Big idea: can we somehow make requirements document testable?"}, "title": "test"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Turning use cases into tests -- gherkinFeature file & stepsPassing info around -- contextSelenium -- driving real browser aroundBehave test runner (behave-Jango)JIRA: acceptance tests are now part of the Relying strictly on this type of testing is bad idea!"}, "title": "test"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "(See execution time for one test vs whole suite!)"}, "title": "test"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Lesson 2: Testing FrameworksPython testing with pytest!"}, "title": "test"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Part 1: Introductions and motivating testing."}, "title": "test"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Lesson 3: JenkinsJenkins is a CI/CD tool, but it is used to force the running of automated tests as part of the build process, so we have included it in this section."}, "title": "test"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Classic way to do testing: test cases, bugs, regression, growing \"regression debt\"."}, "title": "testing"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Please study regression testing ."}, "title": "testing"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "For lazy guys -- AutoFixture :)fixture.create()Typical mistakes:Useless tests -- testing default Models methods, for example."}, "title": "testing"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Turning use cases into tests -- gherkinFeature file & stepsPassing info around -- contextSelenium -- driving real browser aroundBehave test runner (behave-Jango)JIRA: acceptance tests are now part of the Relying strictly on this type of testing is bad idea!"}, "title": "testing"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Lesson 2: Testing FrameworksPython testing with pytest!"}, "title": "testing"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Part 1: Introductions and motivating testing."}, "title": "testing"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "This is part of the \"incremental improvement\" idea: if we do continuous integration and continuous delivery with small batches, each delivery into production should produce at most a \"small batch\" of bugs!"}, "title": "continuous"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "This is part of the \"incremental improvement\" idea: if we do continuous integration and continuous delivery with small batches, each delivery into production should produce at most a \"small batch\" of bugs!"}, "title": "part"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Turning use cases into tests -- gherkinFeature file & stepsPassing info around -- contextSelenium -- driving real browser aroundBehave test runner (behave-Jango)JIRA: acceptance tests are now part of the Relying strictly on this type of testing is bad idea!"}, "title": "part"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Lesson 3: JenkinsJenkins is a CI/CD tool, but it is used to force the running of automated tests as part of the build process, so we have included it in this section."}, "title": "part"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Classic way to do testing: test cases, bugs, regression, growing \"regression debt\"."}, "title": "bugs"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-bug mindset: bugs are not tasks in backlog, you have to fix them as you go -- by the end of the day zero bugs exist."}, "title": "bugs"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "This is part of the \"incremental improvement\" idea: if we do continuous integration and continuous delivery with small batches, each delivery into production should produce at most a \"small batch\" of bugs!"}, "title": "bugs"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-length feedback, developers can test and fix bugs immediately."}, "title": "bugs"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Part of this is establishing a culture of trust: If we need to feed approval for each change through multiple levels of bureaucracy, we can't fix bugs right away."}, "title": "bugs"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-bug mindset: bugs are not tasks in backlog, you have to fix them as you go -- by the end of the day zero bugs exist."}, "title": "idea"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "This is part of the \"incremental improvement\" idea: if we do continuous integration and continuous delivery with small batches, each delivery into production should produce at most a \"small batch\" of bugs!"}, "title": "idea"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-length feedback, developers can test and fix bugs immediately."}, "title": "idea"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Big idea: can we somehow make requirements document testable?"}, "title": "idea"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Turning use cases into tests -- gherkinFeature file & stepsPassing info around -- contextSelenium -- driving real browser aroundBehave test runner (behave-Jango)JIRA: acceptance tests are now part of the Relying strictly on this type of testing is bad idea!"}, "title": "idea"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "This is part of the \"incremental improvement\" idea: if we do continuous integration and continuous delivery with small batches, each delivery into production should produce at most a \"small batch\" of bugs!"}, "title": "integration"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "No need to integration-test Autogenerated View (except live tests)."}, "title": "integration"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Setting up Jenkins as a webhook in GitHubSlack notification plugin integration with JenkinsTesting and Continuous Integration Part 1Testing and Continuous Integration Part 2Testing only recently changed git files in jenkins"}, "title": "integration"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Setting up Jenkins as a webhook in GitHubSlack notification plugin integration with JenkinsTesting and Continuous Integration Part 1Testing and Continuous Integration Part 2Testing only recently changed git files in jenkins"}, "title": "jenkins"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "This is part of the \"incremental improvement\" idea: if we do continuous integration and continuous delivery with small batches, each delivery into production should produce at most a \"small batch\" of bugs!"}, "title": "small"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "And we can fix that small batch immediately."}, "title": "small"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Test pyramid:Unit tests for individual classes and methods (models, controllers, views)Integration tests to check feature top-down."}, "title": "methods"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Django benefits:No need to unit-test Models (except custom query sets & business logic methods)."}, "title": "methods"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "For lazy guys -- AutoFixture :)fixture.create()Typical mistakes:Useless tests -- testing default Models methods, for example."}, "title": "methods"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Refactoring:Small methods -- less than a screen."}, "title": "methods"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Add tests if there are custom methods."}, "title": "methods"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-bug mindset: bugs are not tasks in backlog, you have to fix them as you go -- by the end of the day zero bugs exist."}, "title": "fix"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "And we can fix that small batch immediately."}, "title": "fix"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-length feedback, developers can test and fix bugs immediately."}, "title": "fix"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Part of this is establishing a culture of trust: If we need to feed approval for each change through multiple levels of bureaucracy, we can't fix bugs right away."}, "title": "fix"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "tearDown()Preparing data -- AutoFixtureTaskModelTransactionTestCase(TransactionTestCase): regular fixture."}, "title": "fix"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "For lazy guys -- AutoFixture :)fixture.create()Typical mistakes:Useless tests -- testing default Models methods, for example."}, "title": "fix"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Fake: a real object created for the test."}, "title": "real"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Stub: a crude imitation of real object returning hard-coded values."}, "title": "real"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Mock: an elegant imitation of the object (if real object is not yet ready or expensive)."}, "title": "real"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Turning use cases into tests -- gherkinFeature file & stepsPassing info around -- contextSelenium -- driving real browser aroundBehave test runner (behave-Jango)JIRA: acceptance tests are now part of the Relying strictly on this type of testing is bad idea!"}, "title": "real"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Fake: a real object created for the test."}, "title": "object"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Stub: a crude imitation of real object returning hard-coded values."}, "title": "object"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Mock: an elegant imitation of the object (if real object is not yet ready or expensive)."}, "title": "object"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "This is part of the \"incremental improvement\" idea: if we do continuous integration and continuous delivery with small batches, each delivery into production should produce at most a \"small batch\" of bugs!"}, "title": "production"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "In the latter, everyone is responsible for the entire production process."}, "title": "production"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Test pyramid:Unit tests for individual classes and methods (models, controllers, views)Integration tests to check feature top-down."}, "title": "view"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "And we can relate this back to the discussion in chapter one on \"Taylorism\" versus \"Toyota Production System\": in the former, the \"workers\" just carry out the plans of the \"managers.\""}, "title": "one"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "In the latter, everyone is responsible for the entire production process."}, "title": "one"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "(See execution time for one test vs whole suite!)"}, "title": "one"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "A Crash Course in Continuous TestingThe Future of Continuous Testing: Fail FasterDesign for a Python-based spell checker (We want one of these for our web pages!"}, "title": "one"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Lesson 3: JenkinsJenkins is a CI/CD tool, but it is used to force the running of automated tests as part of the build process, so we have included it in this section."}, "title": "automated"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Part of this is establishing a culture of trust: If we need to feed approval for each change through multiple levels of bureaucracy, we can't fix bugs right away."}, "title": "need"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Django benefits:No need to unit-test Models (except custom query sets & business logic methods)."}, "title": "need"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "No need to integration-test Autogenerated View (except live tests)."}, "title": "need"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Classic way to do testing: test cases, bugs, regression, growing \"regression debt\"."}, "title": "regression"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Please study regression testing ."}, "title": "regression"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Test pyramid:Unit tests for individual classes and methods (models, controllers, views)Integration tests to check feature top-down."}, "title": "check"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Acceptance test to check feature as user sees it."}, "title": "check"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Terminology:TestCase: set of checks to be performed."}, "title": "check"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "(Test should check if changes indeed persisted)."}, "title": "check"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "A Crash Course in Continuous TestingThe Future of Continuous Testing: Fail FasterDesign for a Python-based spell checker (We want one of these for our web pages!"}, "title": "check"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Test pyramid:Unit tests for individual classes and methods (models, controllers, views)Integration tests to check feature top-down."}, "title": "models"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Django benefits:No need to unit-test Models (except custom query sets & business logic methods)."}, "title": "except"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "No need to integration-test Autogenerated View (except live tests)."}, "title": "except"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Test suite: set of tests serving specific purpose."}, "title": "suite"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "(See execution time for one test vs whole suite!)"}, "title": "suite"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-bug mindset: bugs are not tasks in backlog, you have to fix them as you go -- by the end of the day zero bugs exist."}, "title": "set"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Terminology:TestCase: set of checks to be performed."}, "title": "set"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Test suite: set of tests serving specific purpose."}, "title": "set"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Django benefits:No need to unit-test Models (except custom query sets & business logic methods)."}, "title": "set"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Anatomy of test case:setUp()Test_whatYouTest_whatYouDo_whatYouExpect."}, "title": "set"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Lesson 3: JenkinsJenkins is a CI/CD tool, but it is used to force the running of automated tests as part of the build process, so we have included it in this section."}, "title": "build"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "We will try to build it.)"}, "title": "build"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Test pyramid:Unit tests for individual classes and methods (models, controllers, views)Integration tests to check feature top-down."}, "title": "controllers"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Fat controllers!"}, "title": "controllers"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "This is part of the \"incremental improvement\" idea: if we do continuous integration and continuous delivery with small batches, each delivery into production should produce at most a \"small batch\" of bugs!"}, "title": "batch"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "And we can fix that small batch immediately."}, "title": "batch"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "We test to see if the software does what we want it to do."}, "title": "see"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Acceptance test to check feature as user sees it."}, "title": "see"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Django benefits:No need to unit-test Models (except custom query sets & business logic methods)."}, "title": "custom"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Add tests if there are custom methods."}, "title": "custom"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "This is part of the \"incremental improvement\" idea: if we do continuous integration and continuous delivery with small batches, each delivery into production should produce at most a \"small batch\" of bugs!"}, "title": "delivery"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Always: smoke test, main success [AKA happy path], extended tests."}, "title": "ok"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Setting up Jenkins as a webhook in GitHubSlack notification plugin integration with JenkinsTesting and Continuous Integration Part 1Testing and Continuous Integration Part 2Testing only recently changed git files in jenkins"}, "title": "ok"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Classic way to do testing: test cases, bugs, regression, growing \"regression debt\"."}, "title": "cases"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Turning use cases into tests -- gherkinFeature file & stepsPassing info around -- contextSelenium -- driving real browser aroundBehave test runner (behave-Jango)JIRA: acceptance tests are now part of the Relying strictly on this type of testing is bad idea!"}, "title": "cases"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "And whenever it doesn't, what are the effects?"}, "title": "n't"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Part of this is establishing a culture of trust: If we need to feed approval for each change through multiple levels of bureaucracy, we can't fix bugs right away."}, "title": "n't"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Stub: a crude imitation of real object returning hard-coded values."}, "title": "imitation"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Mock: an elegant imitation of the object (if real object is not yet ready or expensive)."}, "title": "imitation"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "We test to see if the software does what we want it to do."}, "title": "want"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "A Crash Course in Continuous TestingThe Future of Continuous Testing: Fail FasterDesign for a Python-based spell checker (We want one of these for our web pages!"}, "title": "want"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Test pyramid:Unit tests for individual classes and methods (models, controllers, views)Integration tests to check feature top-down."}, "title": "feature"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Acceptance test to check feature as user sees it."}, "title": "feature"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Write LiveTestCase using requirements."}, "title": "requirements"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Why preparing requirements still matters (\u201cPlease show balance\" in Danfoss)."}, "title": "requirements"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Big idea: can we somehow make requirements document testable?"}, "title": "requirements"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Fixture: prepared data to be loaded into the db."}, "title": "data"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "tearDown()Preparing data -- AutoFixtureTaskModelTransactionTestCase(TransactionTestCase): regular fixture."}, "title": "data"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Create Controller (View as Django calls it)."}, "title": "calls"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Write View (Template as Django calls it)."}, "title": "calls"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Why preparing requirements still matters (\u201cPlease show balance\" in Danfoss)."}, "title": "preparing"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Test suite: set of tests serving specific purpose."}, "title": "serving"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-length feedback, developers can test and fix bugs immediately."}, "title": "zero-length"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-length feedback, developers can test and fix bugs immediately."}, "title": "feedback"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-bug mindset: bugs are not tasks in backlog, you have to fix them as you go -- by the end of the day zero bugs exist."}, "title": "zero-bug"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Turning use cases into tests -- gherkinFeature file & stepsPassing info around -- contextSelenium -- driving real browser aroundBehave test runner (behave-Jango)JIRA: acceptance tests are now part of the Relying strictly on this type of testing is bad idea!"}, "title": "bad"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "For lazy guys -- AutoFixture :)fixture.create()Typical mistakes:Useless tests -- testing default Models methods, for example."}, "title": "mistakes"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-bug mindset: bugs are not tasks in backlog, you have to fix them as you go -- by the end of the day zero bugs exist."}, "title": "go"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Django benefits:No need to unit-test Models (except custom query sets & business logic methods)."}, "title": "go"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Create Controller (View as Django calls it)."}, "title": "go"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Write View (Template as Django calls it)."}, "title": "go"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Turning use cases into tests -- gherkinFeature file & stepsPassing info around -- contextSelenium -- driving real browser aroundBehave test runner (behave-Jango)JIRA: acceptance tests are now part of the Relying strictly on this type of testing is bad idea!"}, "title": "go"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Django benefits:No need to unit-test Models (except custom query sets & business logic methods)."}, "title": "query"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Why preparing requirements still matters (\u201cPlease show balance\" in Danfoss)."}, "title": "still"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "For lazy guys -- AutoFixture :)fixture.create()Typical mistakes:Useless tests -- testing default Models methods, for example."}, "title": "guys"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Mock: an elegant imitation of the object (if real object is not yet ready or expensive)."}, "title": "yet"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Big idea: can we somehow make requirements document testable?"}, "title": "make"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "A Crash Course in Continuous TestingThe Future of Continuous Testing: Fail FasterDesign for a Python-based spell checker (We want one of these for our web pages!"}, "title": "web"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Setting up Jenkins as a webhook in GitHubSlack notification plugin integration with JenkinsTesting and Continuous Integration Part 1Testing and Continuous Integration Part 2Testing only recently changed git files in jenkins"}, "title": "web"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "This is part of the \"incremental improvement\" idea: if we do continuous integration and continuous delivery with small batches, each delivery into production should produce at most a \"small batch\" of bugs!"}, "title": "batches"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Testing implementation -- method save_changes() returns OK -- everything is OK!"}, "title": "implementation"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "And we can relate this back to the discussion in chapter one on \"Taylorism\" versus \"Toyota Production System\": in the former, the \"workers\" just carry out the plans of the \"managers.\""}, "title": "workers"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "For lazy guys -- AutoFixture :)fixture.create()Typical mistakes:Useless tests -- testing default Models methods, for example."}, "title": "less"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Refactoring:Small methods -- less than a screen."}, "title": "less"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "(See execution time for one test vs whole suite!)"}, "title": "vs"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "This is part of the \"incremental improvement\" idea: if we do continuous integration and continuous delivery with small batches, each delivery into production should produce at most a \"small batch\" of bugs!"}, "title": "improvement"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "And we can relate this back to the discussion in chapter one on \"Taylorism\" versus \"Toyota Production System\": in the former, the \"workers\" just carry out the plans of the \"managers.\""}, "title": "versus"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Turning use cases into tests -- gherkinFeature file & stepsPassing info around -- contextSelenium -- driving real browser aroundBehave test runner (behave-Jango)JIRA: acceptance tests are now part of the Relying strictly on this type of testing is bad idea!"}, "title": "info"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Part 1: Introductions and motivating testing."}, "title": "motivating"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Turning use cases into tests -- gherkinFeature file & stepsPassing info around -- contextSelenium -- driving real browser aroundBehave test runner (behave-Jango)JIRA: acceptance tests are now part of the Relying strictly on this type of testing is bad idea!"}, "title": "around"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "A Crash Course in Continuous TestingThe Future of Continuous Testing: Fail FasterDesign for a Python-based spell checker (We want one of these for our web pages!"}, "title": "spell"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "And whenever it doesn't, what are the effects?"}, "title": "effects"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Write LiveTestCase using requirements."}, "title": "using"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "(See execution time for one test vs whole suite!)"}, "title": "execution"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-bug mindset: bugs are not tasks in backlog, you have to fix them as you go -- by the end of the day zero bugs exist."}, "title": "day"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "In the latter, everyone is responsible for the entire production process."}, "title": "entire"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Big idea: can we somehow make requirements document testable?"}, "title": "document"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "(Test should check if changes indeed persisted)."}, "title": "indeed"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Always: smoke test, main success [AKA happy path], extended tests."}, "title": "success"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Turning use cases into tests -- gherkinFeature file & stepsPassing info around -- contextSelenium -- driving real browser aroundBehave test runner (behave-Jango)JIRA: acceptance tests are now part of the Relying strictly on this type of testing is bad idea!"}, "title": "strictly"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Part of this is establishing a culture of trust: If we need to feed approval for each change through multiple levels of bureaucracy, we can't fix bugs right away."}, "title": "establishing"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "(Test should check if changes indeed persisted)."}, "title": "persisted"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Testing implementation -- method save_changes() returns OK -- everything is OK!"}, "title": "save_changes"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-bug mindset: bugs are not tasks in backlog, you have to fix them as you go -- by the end of the day zero bugs exist."}, "title": "backlog"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Part of this is establishing a culture of trust: If we need to feed approval for each change through multiple levels of bureaucracy, we can't fix bugs right away."}, "title": "right"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Lesson 3: JenkinsJenkins is a CI/CD tool, but it is used to force the running of automated tests as part of the build process, so we have included it in this section."}, "title": "force"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Lesson 3: JenkinsJenkins is a CI/CD tool, but it is used to force the running of automated tests as part of the build process, so we have included it in this section."}, "title": "used"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Part of this is establishing a culture of trust: If we need to feed approval for each change through multiple levels of bureaucracy, we can't fix bugs right away."}, "title": "culture"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Test pyramid:Unit tests for individual classes and methods (models, controllers, views)Integration tests to check feature top-down."}, "title": "individual"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Setting up Jenkins as a webhook in GitHubSlack notification plugin integration with JenkinsTesting and Continuous Integration Part 1Testing and Continuous Integration Part 2Testing only recently changed git files in jenkins"}, "title": "recently"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Test suite: set of tests serving specific purpose."}, "title": "specific"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Refactoring palette in the PyCharm."}, "title": "palette"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Good beginners pattern:Create Model."}, "title": "pattern"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Automated Testing Lesson 1: The Whys and Hows of Automated TestingThis section is co-authored by Denis Petelin and Prof. Callahan."}, "title": "section"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Lesson 3: JenkinsJenkins is a CI/CD tool, but it is used to force the running of automated tests as part of the build process, so we have included it in this section."}, "title": "section"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Test pyramid:Unit tests for individual classes and methods (models, controllers, views)Integration tests to check feature top-down."}, "title": "method"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Django benefits:No need to unit-test Models (except custom query sets & business logic methods)."}, "title": "method"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "For lazy guys -- AutoFixture :)fixture.create()Typical mistakes:Useless tests -- testing default Models methods, for example."}, "title": "method"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Testing implementation -- method save_changes() returns OK -- everything is OK!"}, "title": "method"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Refactoring:Small methods -- less than a screen."}, "title": "method"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Add tests if there are custom methods."}, "title": "method"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Mock: an elegant imitation of the object (if real object is not yet ready or expensive)."}, "title": "expensive"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Stub: a crude imitation of real object returning hard-coded values."}, "title": "crude"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Terminology:TestCase: set of checks to be performed."}, "title": "checks"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Big idea: can we somehow make requirements document testable?"}, "title": "somehow"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "For lazy guys -- AutoFixture :)fixture.create()Typical mistakes:Useless tests -- testing default Models methods, for example."}, "title": "lazy"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Stub: a crude imitation of real object returning hard-coded values."}, "title": "turning"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Django benefits:No need to unit-test Models (except custom query sets & business logic methods)."}, "title": "business"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Setting up Jenkins as a webhook in GitHubSlack notification plugin integration with JenkinsTesting and Continuous Integration Part 1Testing and Continuous Integration Part 2Testing only recently changed git files in jenkins"}, "title": "git"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Part of this is establishing a culture of trust: If we need to feed approval for each change through multiple levels of bureaucracy, we can't fix bugs right away."}, "title": "approval"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Stub: a crude imitation of real object returning hard-coded values."}, "title": "returning"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Classic way to do testing: test cases, bugs, regression, growing \"regression debt\"."}, "title": "debt"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Part of this is establishing a culture of trust: If we need to feed approval for each change through multiple levels of bureaucracy, we can't fix bugs right away."}, "title": "change"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Testing implementation -- method save_changes() returns OK -- everything is OK!"}, "title": "change"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "(Test should check if changes indeed persisted)."}, "title": "change"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Setting up Jenkins as a webhook in GitHubSlack notification plugin integration with JenkinsTesting and Continuous Integration Part 1Testing and Continuous Integration Part 2Testing only recently changed git files in jenkins"}, "title": "change"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-bug mindset: bugs are not tasks in backlog, you have to fix them as you go -- by the end of the day zero bugs exist."}, "title": "mindset"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "And we can relate this back to the discussion in chapter one on \"Taylorism\" versus \"Toyota Production System\": in the former, the \"workers\" just carry out the plans of the \"managers.\""}, "title": "chapter"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Why preparing requirements still matters (\u201cPlease show balance\" in Danfoss)."}, "title": "balance"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Django benefits:No need to unit-test Models (except custom query sets & business logic methods)."}, "title": "benefits"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Fake: a real object created for the test."}, "title": "created"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Please study regression testing ."}, "title": "study"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Django benefits:No need to unit-test Models (except custom query sets & business logic methods)."}, "title": "unit-test"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "This is part of the \"incremental improvement\" idea: if we do continuous integration and continuous delivery with small batches, each delivery into production should produce at most a \"small batch\" of bugs!"}, "title": "produce"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Always: smoke test, main success [AKA happy path], extended tests."}, "title": "smoke"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Django benefits:No need to unit-test Models (except custom query sets & business logic methods)."}, "title": "logic"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Turning use cases into tests -- gherkinFeature file & stepsPassing info around -- contextSelenium -- driving real browser aroundBehave test runner (behave-Jango)JIRA: acceptance tests are now part of the Relying strictly on this type of testing is bad idea!"}, "title": "browser"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Testing implementation -- method save_changes() returns OK -- everything is OK!"}, "title": "changes"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "(Test should check if changes indeed persisted)."}, "title": "changes"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "We test to see if the software does what we want it to do."}, "title": "software"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-length feedback, developers can test and fix bugs immediately."}, "title": "feed"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Part of this is establishing a culture of trust: If we need to feed approval for each change through multiple levels of bureaucracy, we can't fix bugs right away."}, "title": "feed"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-bug mindset: bugs are not tasks in backlog, you have to fix them as you go -- by the end of the day zero bugs exist."}, "title": "tasks"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "And we can relate this back to the discussion in chapter one on \"Taylorism\" versus \"Toyota Production System\": in the former, the \"workers\" just carry out the plans of the \"managers.\""}, "title": "managers"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "And we can relate this back to the discussion in chapter one on \"Taylorism\" versus \"Toyota Production System\": in the former, the \"workers\" just carry out the plans of the \"managers.\""}, "title": "relate"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Classic way to do testing: test cases, bugs, regression, growing \"regression debt\"."}, "title": "ca"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "And we can fix that small batch immediately."}, "title": "ca"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-length feedback, developers can test and fix bugs immediately."}, "title": "ca"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Part of this is establishing a culture of trust: If we need to feed approval for each change through multiple levels of bureaucracy, we can't fix bugs right away."}, "title": "ca"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "And we can relate this back to the discussion in chapter one on \"Taylorism\" versus \"Toyota Production System\": in the former, the \"workers\" just carry out the plans of the \"managers.\""}, "title": "ca"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Anatomy of test case:setUp()Test_whatYouTest_whatYouDo_whatYouExpect."}, "title": "ca"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "For lazy guys -- AutoFixture :)fixture.create()Typical mistakes:Useless tests -- testing default Models methods, for example."}, "title": "ca"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Create Controller (View as Django calls it)."}, "title": "ca"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Write View (Template as Django calls it)."}, "title": "ca"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Big idea: can we somehow make requirements document testable?"}, "title": "ca"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Turning use cases into tests -- gherkinFeature file & stepsPassing info around -- contextSelenium -- driving real browser aroundBehave test runner (behave-Jango)JIRA: acceptance tests are now part of the Relying strictly on this type of testing is bad idea!"}, "title": "ca"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Setting up Jenkins as a webhook in GitHubSlack notification plugin integration with JenkinsTesting and Continuous Integration Part 1Testing and Continuous Integration Part 2Testing only recently changed git files in jenkins"}, "title": "ca"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Lesson 3: JenkinsJenkins is a CI/CD tool, but it is used to force the running of automated tests as part of the build process, so we have included it in this section."}, "title": "running"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Lesson 3: JenkinsJenkins is a CI/CD tool, but it is used to force the running of automated tests as part of the build process, so we have included it in this section."}, "title": "included"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "In the latter, everyone is responsible for the entire production process."}, "title": "everyone"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Always: smoke test, main success [AKA happy path], extended tests."}, "title": "path"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "And we can relate this back to the discussion in chapter one on \"Taylorism\" versus \"Toyota Production System\": in the former, the \"workers\" just carry out the plans of the \"managers.\""}, "title": "carry"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Fixture: prepared data to be loaded into the db."}, "title": "loaded"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Part of this is establishing a culture of trust: If we need to feed approval for each change through multiple levels of bureaucracy, we can't fix bugs right away."}, "title": "trust"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Big idea: can we somehow make requirements document testable?"}, "title": "testable"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Django benefits:No need to unit-test Models (except custom query sets & business logic methods)."}, "title": "unit"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Acceptance test to check feature as user sees it."}, "title": "use"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Turning use cases into tests -- gherkinFeature file & stepsPassing info around -- contextSelenium -- driving real browser aroundBehave test runner (behave-Jango)JIRA: acceptance tests are now part of the Relying strictly on this type of testing is bad idea!"}, "title": "use"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Lesson 3: JenkinsJenkins is a CI/CD tool, but it is used to force the running of automated tests as part of the build process, so we have included it in this section."}, "title": "use"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Test pyramid:Unit tests for individual classes and methods (models, controllers, views)Integration tests to check feature top-down."}, "title": "views"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Fake: a real object created for the test."}, "title": "create"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "For lazy guys -- AutoFixture :)fixture.create()Typical mistakes:Useless tests -- testing default Models methods, for example."}, "title": "create"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Test if it handles errors."}, "title": "handles"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "In the latter, everyone is responsible for the entire production process."}, "title": "process"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Lesson 3: JenkinsJenkins is a CI/CD tool, but it is used to force the running of automated tests as part of the build process, so we have included it in this section."}, "title": "process"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "This is part of the \"incremental improvement\" idea: if we do continuous integration and continuous delivery with small batches, each delivery into production should produce at most a \"small batch\" of bugs!"}, "title": "live"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "No need to integration-test Autogenerated View (except live tests)."}, "title": "live"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "We will try to build it.)"}, "title": "try"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Classic way to do testing: test cases, bugs, regression, growing \"regression debt\"."}, "title": "way"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Part of this is establishing a culture of trust: If we need to feed approval for each change through multiple levels of bureaucracy, we can't fix bugs right away."}, "title": "way"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Always: smoke test, main success [AKA happy path], extended tests."}, "title": "way"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Why preparing requirements still matters (\u201cPlease show balance\" in Danfoss)."}, "title": "show"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Testing implementation -- method save_changes() returns OK -- everything is OK!"}, "title": "returns"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Turning use cases into tests -- gherkinFeature file & stepsPassing info around -- contextSelenium -- driving real browser aroundBehave test runner (behave-Jango)JIRA: acceptance tests are now part of the Relying strictly on this type of testing is bad idea!"}, "title": "type"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Always: smoke test, main success [AKA happy path], extended tests."}, "title": "happy"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Part of this is establishing a culture of trust: If we need to feed approval for each change through multiple levels of bureaucracy, we can't fix bugs right away."}, "title": "bureaucracy"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Lesson 3: JenkinsJenkins is a CI/CD tool, but it is used to force the running of automated tests as part of the build process, so we have included it in this section."}, "title": "tool"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-bug mindset: bugs are not tasks in backlog, you have to fix them as you go -- by the end of the day zero bugs exist."}, "title": "back"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-length feedback, developers can test and fix bugs immediately."}, "title": "back"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "And we can relate this back to the discussion in chapter one on \"Taylorism\" versus \"Toyota Production System\": in the former, the \"workers\" just carry out the plans of the \"managers.\""}, "title": "back"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Test pyramid:Unit tests for individual classes and methods (models, controllers, views)Integration tests to check feature top-down."}, "title": "controller"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Fat controllers!"}, "title": "controller"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "And we can relate this back to the discussion in chapter one on \"Taylorism\" versus \"Toyota Production System\": in the former, the \"workers\" just carry out the plans of the \"managers.\""}, "title": "former"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Setting up Jenkins as a webhook in GitHubSlack notification plugin integration with JenkinsTesting and Continuous Integration Part 1Testing and Continuous Integration Part 2Testing only recently changed git files in jenkins"}, "title": "notification"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Classic way to do testing: test cases, bugs, regression, growing \"regression debt\"."}, "title": "case"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Anatomy of test case:setUp()Test_whatYouTest_whatYouDo_whatYouExpect."}, "title": "case"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Turning use cases into tests -- gherkinFeature file & stepsPassing info around -- contextSelenium -- driving real browser aroundBehave test runner (behave-Jango)JIRA: acceptance tests are now part of the Relying strictly on this type of testing is bad idea!"}, "title": "case"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Always: smoke test, main success [AKA happy path], extended tests."}, "title": "main"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Mock: an elegant imitation of the object (if real object is not yet ready or expensive)."}, "title": "elegant"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "For lazy guys -- AutoFixture :)fixture.create()Typical mistakes:Useless tests -- testing default Models methods, for example."}, "title": "default"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-bug mindset: bugs are not tasks in backlog, you have to fix them as you go -- by the end of the day zero bugs exist."}, "title": "zero"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-length feedback, developers can test and fix bugs immediately."}, "title": "zero"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "tearDown()Preparing data -- AutoFixtureTaskModelTransactionTestCase(TransactionTestCase): regular fixture."}, "title": "act"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Refactoring:Small methods -- less than a screen."}, "title": "act"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Refactoring palette in the PyCharm."}, "title": "act"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Test pyramid:Unit tests for individual classes and methods (models, controllers, views)Integration tests to check feature top-down."}, "title": "classes"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "(See execution time for one test vs whole suite!)"}, "title": "time"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Classic way to do testing: test cases, bugs, regression, growing \"regression debt\"."}, "title": "growing"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "For lazy guys -- AutoFixture :)fixture.create()Typical mistakes:Useless tests -- testing default Models methods, for example."}, "title": "fixture.create"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Stub: a crude imitation of real object returning hard-coded values."}, "title": "hard-coded"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Test pyramid:Unit tests for individual classes and methods (models, controllers, views)Integration tests to check feature top-down."}, "title": "pyramid"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Acceptance test to check feature as user sees it."}, "title": "sees"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Turning use cases into tests -- gherkinFeature file & stepsPassing info around -- contextSelenium -- driving real browser aroundBehave test runner (behave-Jango)JIRA: acceptance tests are now part of the Relying strictly on this type of testing is bad idea!"}, "title": "file"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Setting up Jenkins as a webhook in GitHubSlack notification plugin integration with JenkinsTesting and Continuous Integration Part 1Testing and Continuous Integration Part 2Testing only recently changed git files in jenkins"}, "title": "file"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Turning use cases into tests -- gherkinFeature file & stepsPassing info around -- contextSelenium -- driving real browser aroundBehave test runner (behave-Jango)JIRA: acceptance tests are now part of the Relying strictly on this type of testing is bad idea!"}, "title": "runner"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Small tests -- 8-10 lines."}, "title": "8-10"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Setting up Jenkins as a webhook in GitHubSlack notification plugin integration with JenkinsTesting and Continuous Integration Part 1Testing and Continuous Integration Part 2Testing only recently changed git files in jenkins"}, "title": "plugin"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Mock: an elegant imitation of the object (if real object is not yet ready or expensive)."}, "title": "ready"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "This is part of the \"incremental improvement\" idea: if we do continuous integration and continuous delivery with small batches, each delivery into production should produce at most a \"small batch\" of bugs!"}, "title": "incremental"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "No need to integration-test Autogenerated View (except live tests)."}, "title": "integration-test"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-bug mindset: bugs are not tasks in backlog, you have to fix them as you go -- by the end of the day zero bugs exist."}, "title": "end"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Always: smoke test, main success [AKA happy path], extended tests."}, "title": "end"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "tearDown()Preparing data -- AutoFixtureTaskModelTransactionTestCase(TransactionTestCase): regular fixture."}, "title": "regular"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "And we can relate this back to the discussion in chapter one on \"Taylorism\" versus \"Toyota Production System\": in the former, the \"workers\" just carry out the plans of the \"managers.\""}, "title": "discussion"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "In the latter, everyone is responsible for the entire production process."}, "title": "responsible"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Turning use cases into tests -- gherkinFeature file & stepsPassing info around -- contextSelenium -- driving real browser aroundBehave test runner (behave-Jango)JIRA: acceptance tests are now part of the Relying strictly on this type of testing is bad idea!"}, "title": "acceptance"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Revolutionary idea: zero-length feedback, developers can test and fix bugs immediately."}, "title": "developers"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Always: smoke test, main success [AKA happy path], extended tests."}, "title": "extended"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Part of this is establishing a culture of trust: If we need to feed approval for each change through multiple levels of bureaucracy, we can't fix bugs right away."}, "title": "multiple"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "And we can relate this back to the discussion in chapter one on \"Taylorism\" versus \"Toyota Production System\": in the former, the \"workers\" just carry out the plans of the \"managers.\""}, "title": "plans"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Setting up Jenkins as a webhook in GitHubSlack notification plugin integration with JenkinsTesting and Continuous Integration Part 1Testing and Continuous Integration Part 2Testing only recently changed git files in jenkins"}, "title": "webhook"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Setting up Jenkins as a webhook in GitHubSlack notification plugin integration with JenkinsTesting and Continuous Integration Part 1Testing and Continuous Integration Part 2Testing only recently changed git files in jenkins"}, "title": "files"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Fixture: prepared data to be loaded into the db."}, "title": "prepared"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Part of this is establishing a culture of trust: If we need to feed approval for each change through multiple levels of bureaucracy, we can't fix bugs right away."}, "title": "levels"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Acceptance test to check feature as user sees it."}, "title": "user"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Lesson 2: Testing FrameworksPython testing with pytest!"}, "title": "pytest"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "A Crash Course in Continuous TestingThe Future of Continuous Testing: Fail FasterDesign for a Python-based spell checker (We want one of these for our web pages!"}, "title": "pages"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Automated Testing Lesson 1: The Whys and Hows of Automated TestingThis section is co-authored by Denis Petelin and Prof. Callahan."}, "title": "co-authored"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Good beginners pattern:Create Model."}, "title": "beginners"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Turning use cases into tests -- gherkinFeature file & stepsPassing info around -- contextSelenium -- driving real browser aroundBehave test runner (behave-Jango)JIRA: acceptance tests are now part of the Relying strictly on this type of testing is bad idea!"}, "title": "driving"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Why preparing requirements still matters (\u201cPlease show balance\" in Danfoss)."}, "title": "matters"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "And whenever it doesn't, what are the effects?"}, "title": "whenever"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "(See execution time for one test vs whole suite!)"}, "title": "whole"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Setting up Jenkins as a webhook in GitHubSlack notification plugin integration with JenkinsTesting and Continuous Integration Part 1Testing and Continuous Integration Part 2Testing only recently changed git files in jenkins"}, "title": "changed"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Django benefits:No need to unit-test Models (except custom query sets & business logic methods)."}, "title": "sets"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "Testing implementation -- method save_changes() returns OK -- everything is OK!"}, "title": "everything"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "A Crash Course in Continuous TestingThe Future of Continuous Testing: Fail FasterDesign for a Python-based spell checker (We want one of these for our web pages!"}, "title": "checker"}, {"info": {"url": "http://www.thedevopscourse.com/devops/test", "page": "automate test", "sentence": "In the latter, everyone is responsible for the entire production process."}, "title": "latter"}]