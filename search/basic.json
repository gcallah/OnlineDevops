<<<<<<< Updated upstream
[{"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't copy blocks of code to wherever you need them in your program: write a function and call it from each of those places."}, "title": "code"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "code"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is very tempting, when coding your NYU scheduling app, to write code assuming there are two (major) semesters per year."}, "title": "code"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "code"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Consistent indentation is especially important: it allows a reader of your code to easily line up blocks of control."}, "title": "code"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Irregular indentation is a significant source of bugs, as people modifying the code will make mistakes, for example, about which else goes with which if."}, "title": "code"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "code"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But commenting is no substitute for writing clear, readable code in the first place!"}, "title": "code"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The best explanation of what your code does is, if you write it correctly, your code itself."}, "title": "code"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Remember that we could, and once did, write code just as a sequence of 1s and 0s."}, "title": "code"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "And all higher-level languages need to be translated into such code in the end."}, "title": "code"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The upshot: you should look at your code as being every bit as much about communicating to humans as about directing a computer."}, "title": "code"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test as completely by hand as you can: don't just test that your code fetches the data from the DB correctly: test that it still works properly if there is no data in the DB, or, indeed, if there is no DB!"}, "title": "code"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "write"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't copy blocks of code to wherever you need them in your program: write a function and call it from each of those places."}, "title": "write"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is very tempting, when coding your NYU scheduling app, to write code assuming there are two (major) semesters per year."}, "title": "write"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But you really ought to write hour_of_day = hour mod CLOCK_PERIOD, since both 12 and 24 hour timekeeping methods exist."}, "title": "write"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "write"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The best explanation of what your code does is, if you write it correctly, your code itself."}, "title": "write"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Remember that we could, and once did, write code just as a sequence of 1s and 0s."}, "title": "write"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Write an automated test to go with every program or new feature you write."}, "title": "write"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't copy blocks of code to wherever you need them in your program: write a function and call it from each of those places."}, "title": "function"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Make functions do one job."}, "title": "function"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "function"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "function"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Keep functions short."}, "title": "function"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A function named handle_yearly_taxes() is doing one job, but probably way to big a job."}, "title": "function"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "function"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "function"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A more reasonable middle ground might be something like calc_tax_rate(), where an employee's W2 might be a parameter for the function."}, "title": "function"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Programming FundamentalsOur modern digital creations are complex: a key job of programmers is to express that complexity as simply as possible."}, "title": "job"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Make functions do one job."}, "title": "job"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Funcitons that perform a single job are simpler to understand, easier to change or eliminate, and render the overall system more comprehensible."}, "title": "job"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "job"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This is related to the previous principle, but focuses on the size of the one job that should be done."}, "title": "job"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A function named handle_yearly_taxes() is doing one job, but probably way to big a job."}, "title": "job"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test, test, test!"}, "title": "test"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Write an automated test to go with every program or new feature you write."}, "title": "test"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test as completely by hand as you can: don't just test that your code fetches the data from the DB correctly: test that it still works properly if there is no data in the DB, or, indeed, if there is no DB!"}, "title": "test"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It means that any part of your system that might ever need to change should have a single place where you can make the change."}, "title": "make"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It would make more sense to have create_tax_roll(), calculate_taxes(), send_bills(), record_payments(), and perhaps more."}, "title": "make"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Irregular indentation is a significant source of bugs, as people modifying the code will make mistakes, for example, about which else goes with which if."}, "title": "make"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "These languages exist for humans, not for computers: they make it easier for us to understand and reason about what a program will do."}, "title": "make"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "make"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "like"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "like"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "like"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "like"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A more reasonable middle ground might be something like calc_tax_rate(), where an employee's W2 might be a parameter for the function."}, "title": "like"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is a very good example of what a coding standard is like, and most of the guidelines can be applied in other languages."}, "title": "like"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is very tempting, when coding your NYU scheduling app, to write code assuming there are two (major) semesters per year."}, "title": "coding"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Lesson 2: Python coding standardsFor this lesson, please read the Python coding standard, PEP 8."}, "title": "coding"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is a very good example of what a coding standard is like, and most of the guidelines can be applied in other languages."}, "title": "coding"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "one"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Make functions do one job."}, "title": "one"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No one who ever had a tax lien can sell their property, because the lien never gets cleared."}, "title": "one"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This is related to the previous principle, but focuses on the size of the one job that should be done."}, "title": "one"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A function named handle_yearly_taxes() is doing one job, but probably way to big a job."}, "title": "one"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Programming FundamentalsOur modern digital creations are complex: a key job of programmers is to express that complexity as simply as possible."}, "title": "program"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "\"The best programs are written so that computing machines can perform them quickly and so that human beings can understand them clearly."}, "title": "program"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "program"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "-- Donald Knuth Lesson 1: Some programming fundamentalsHumans have been programming computers for seven or so decades now."}, "title": "program"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "program"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't copy blocks of code to wherever you need them in your program: write a function and call it from each of those places."}, "title": "program"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "program"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "These languages exist for humans, not for computers: they make it easier for us to understand and reason about what a program will do."}, "title": "program"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "program"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Write an automated test to go with every program or new feature you write."}, "title": "program"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It means that any part of your system that might ever need to change should have a single place where you can make the change."}, "title": "change"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You might get away with writing day_of_week = day mod 7, since that number probably will never change."}, "title": "change"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Funcitons that perform a single job are simpler to understand, easier to change or eliminate, and render the overall system more comprehensible."}, "title": "change"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "names"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "names"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "names"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Different languages have different conventions for how to name variables (camelCase, with_underscores, MixedCase, and so on), how to space operators, where to put braces, and so on."}, "title": "languages"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "And all higher-level languages need to be translated into such code in the end."}, "title": "languages"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "These languages exist for humans, not for computers: they make it easier for us to understand and reason about what a program will do."}, "title": "languages"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is a very good example of what a coding standard is like, and most of the guidelines can be applied in other languages."}, "title": "languages"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "data"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test as completely by hand as you can: don't just test that your code fetches the data from the DB correctly: test that it still works properly if there is no data in the DB, or, indeed, if there is no DB!"}, "title": "data"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It means that any part of your system that might ever need to change should have a single place where you can make the change."}, "title": "might"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You might get away with writing day_of_week = day mod 7, since that number probably will never change."}, "title": "might"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A more reasonable middle ground might be something like calc_tax_rate(), where an employee's W2 might be a parameter for the function."}, "title": "might"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "-- Donald Knuth Lesson 1: Some programming fundamentalsHumans have been programming computers for seven or so decades now."}, "title": "programming"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It means that any part of your system that might ever need to change should have a single place where you can make the change."}, "title": "system"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This will be fine... until NYU adopts a tri-mester system."}, "title": "system"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Funcitons that perform a single job are simpler to understand, easier to change or eliminate, and render the overall system more comprehensible."}, "title": "system"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "system"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "\"The best programs are written so that computing machines can perform them quickly and so that human beings can understand them clearly."}, "title": "best"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "best"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The best explanation of what your code does is, if you write it correctly, your code itself."}, "title": "best"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DRY This stands for Don't Repeat Yourself!"}, "title": "n't"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't copy blocks of code to wherever you need them in your program: write a function and call it from each of those places."}, "title": "n't"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "n't"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test as completely by hand as you can: don't just test that your code fetches the data from the DB correctly: test that it still works properly if there is no data in the DB, or, indeed, if there is no DB!"}, "title": "n't"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "way"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "way"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You might get away with writing day_of_week = day mod 7, since that number probably will never change."}, "title": "way"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A function named handle_yearly_taxes() is doing one job, but probably way to big a job."}, "title": "way"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "way"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Make functions do one job."}, "title": "functions"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Keep functions short."}, "title": "functions"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "functions"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "functions"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "tax"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "tax"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No one who ever had a tax lien can sell their property, because the lien never gets cleared."}, "title": "tax"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A function named handle_yearly_taxes() is doing one job, but probably way to big a job."}, "title": "tax"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It would make more sense to have create_tax_roll(), calculate_taxes(), send_bills(), record_payments(), and perhaps more."}, "title": "tax"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "tax"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A more reasonable middle ground might be something like calc_tax_rate(), where an employee's W2 might be a parameter for the function."}, "title": "tax"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Lesson 2: Python coding standardsFor this lesson, please read the Python coding standard, PEP 8."}, "title": "standard"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is a very good example of what a coding standard is like, and most of the guidelines can be applied in other languages."}, "title": "standard"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Our JavaScript team is choosing a standard at present, and soon we will link to that here as well."}, "title": "standard"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "mean"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It means that any part of your system that might ever need to change should have a single place where you can make the change."}, "title": "mean"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Go for the golden mean in naming."}, "title": "mean"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "(\"Properly\" here could mean \"Display an informative error message instead of crashing.\")"}, "title": "mean"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It means that any part of your system that might ever need to change should have a single place where you can make the change."}, "title": "place"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't copy blocks of code to wherever you need them in your program: write a function and call it from each of those places."}, "title": "place"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "place"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But commenting is no substitute for writing clear, readable code in the first place!"}, "title": "place"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It means that any part of your system that might ever need to change should have a single place where you can make the change."}, "title": "need"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't copy blocks of code to wherever you need them in your program: write a function and call it from each of those places."}, "title": "need"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "And all higher-level languages need to be translated into such code in the end."}, "title": "need"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "These languages exist for humans, not for computers: they make it easier for us to understand and reason about what a program will do."}, "title": "humans"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The upshot: you should look at your code as being every bit as much about communicating to humans as about directing a computer."}, "title": "humans"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "define"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Instead, define a constant NUM_SEMS = 2."}, "title": "define"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "\"The best programs are written so that computing machines can perform them quickly and so that human beings can understand them clearly."}, "title": "understand"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Funcitons that perform a single job are simpler to understand, easier to change or eliminate, and render the overall system more comprehensible."}, "title": "understand"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "These languages exist for humans, not for computers: they make it easier for us to understand and reason about what a program will do."}, "title": "understand"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "works"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test as completely by hand as you can: don't just test that your code fetches the data from the DB correctly: test that it still works properly if there is no data in the DB, or, indeed, if there is no DB!"}, "title": "works"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Lesson 2: Python coding standardsFor this lesson, please read the Python coding standard, PEP 8."}, "title": "lesson"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Format and indent properly."}, "title": "properly"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test as completely by hand as you can: don't just test that your code fetches the data from the DB correctly: test that it still works properly if there is no data in the DB, or, indeed, if there is no DB!"}, "title": "properly"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "also"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "also"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "also"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "go"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "go"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Irregular indentation is a significant source of bugs, as people modifying the code will make mistakes, for example, about which else goes with which if."}, "title": "go"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Go for the golden mean in naming."}, "title": "go"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "go"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Write an automated test to go with every program or new feature you write."}, "title": "go"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is a very good example of what a coding standard is like, and most of the guidelines can be applied in other languages."}, "title": "go"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The upshot: you should look at your code as being every bit as much about communicating to humans as about directing a computer."}, "title": "every"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Write an automated test to go with every program or new feature you write."}, "title": "every"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Lesson 2: Python coding standardsFor this lesson, please read the Python coding standard, PEP 8."}, "title": "standards"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "guidelines"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is a very good example of what a coding standard is like, and most of the guidelines can be applied in other languages."}, "title": "guidelines"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "new"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Write an automated test to go with every program or new feature you write."}, "title": "new"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It means that any part of your system that might ever need to change should have a single place where you can make the change."}, "title": "ever"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't copy blocks of code to wherever you need them in your program: write a function and call it from each of those places."}, "title": "ever"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You might get away with writing day_of_week = day mod 7, since that number probably will never change."}, "title": "ever"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No one who ever had a tax lien can sell their property, because the lien never gets cleared."}, "title": "ever"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The upshot: you should look at your code as being every bit as much about communicating to humans as about directing a computer."}, "title": "ever"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Write an automated test to go with every program or new feature you write."}, "title": "ever"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You might get away with writing day_of_week = day mod 7, since that number probably will never change."}, "title": "never"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No one who ever had a tax lien can sell their property, because the lien never gets cleared."}, "title": "never"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Consistent indentation is especially important: it allows a reader of your code to easily line up blocks of control."}, "title": "indentation"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Irregular indentation is a significant source of bugs, as people modifying the code will make mistakes, for example, about which else goes with which if."}, "title": "indentation"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "county"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "county"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "would"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It would make more sense to have create_tax_roll(), calculate_taxes(), send_bills(), record_payments(), and perhaps more."}, "title": "would"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't copy blocks of code to wherever you need them in your program: write a function and call it from each of those places."}, "title": "call"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "call"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "call"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But you really ought to write hour_of_day = hour mod CLOCK_PERIOD, since both 12 and 24 hour timekeeping methods exist."}, "title": "hour"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Irregular indentation is a significant source of bugs, as people modifying the code will make mistakes, for example, about which else goes with which if."}, "title": "example"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "example"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is a very good example of what a coding standard is like, and most of the guidelines can be applied in other languages."}, "title": "example"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "something"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A more reasonable middle ground might be something like calc_tax_rate(), where an employee's W2 might be a parameter for the function."}, "title": "something"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "(\"Properly\" here could mean \"Display an informative error message instead of crashing.\")"}, "title": "instead"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't copy blocks of code to wherever you need them in your program: write a function and call it from each of those places."}, "title": "blocks"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Consistent indentation is especially important: it allows a reader of your code to easily line up blocks of control."}, "title": "blocks"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "remember"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You might get away with writing day_of_week = day mod 7, since that number probably will never change."}, "title": "writing"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But commenting is no substitute for writing clear, readable code in the first place!"}, "title": "writing"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Funcitons that perform a single job are simpler to understand, easier to change or eliminate, and render the overall system more comprehensible."}, "title": "easier"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "These languages exist for humans, not for computers: they make it easier for us to understand and reason about what a program will do."}, "title": "easier"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "lien"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No one who ever had a tax lien can sell their property, because the lien never gets cleared."}, "title": "lien"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Different languages have different conventions for how to name variables (camelCase, with_underscores, MixedCase, and so on), how to space operators, where to put braces, and so on."}, "title": "conventions"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You should follow those conventions, unless there is a strong reason not to."}, "title": "conventions"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You might get away with writing day_of_week = day mod 7, since that number probably will never change."}, "title": "since"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But you really ought to write hour_of_day = hour mod CLOCK_PERIOD, since both 12 and 24 hour timekeeping methods exist."}, "title": "since"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "reader"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Consistent indentation is especially important: it allows a reader of your code to easily line up blocks of control."}, "title": "reader"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You should follow those conventions, unless there is a strong reason not to."}, "title": "reason"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "These languages exist for humans, not for computers: they make it easier for us to understand and reason about what a program will do."}, "title": "reason"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A more reasonable middle ground might be something like calc_tax_rate(), where an employee's W2 might be a parameter for the function."}, "title": "reason"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Remember that we could, and once did, write code just as a sequence of 1s and 0s."}, "title": "could"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "(\"Properly\" here could mean \"Display an informative error message instead of crashing.\")"}, "title": "could"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "-- Donald Knuth Lesson 1: Some programming fundamentalsHumans have been programming computers for seven or so decades now."}, "title": "computers"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "These languages exist for humans, not for computers: they make it easier for us to understand and reason about what a program will do."}, "title": "computers"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Different languages have different conventions for how to name variables (camelCase, with_underscores, MixedCase, and so on), how to space operators, where to put braces, and so on."}, "title": "variables"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "variables"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "\"The best programs are written so that computing machines can perform them quickly and so that human beings can understand them clearly."}, "title": "programs"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "programs"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Programming FundamentalsOur modern digital creations are complex: a key job of programmers is to express that complexity as simply as possible."}, "title": "programmers"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "programmers"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Consistent indentation is especially important: it allows a reader of your code to easily line up blocks of control."}, "title": "especially"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "especially"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "\"The best programs are written so that computing machines can perform them quickly and so that human beings can understand them clearly."}, "title": "clear"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "clear"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No one who ever had a tax lien can sell their property, because the lien never gets cleared."}, "title": "clear"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But commenting is no substitute for writing clear, readable code in the first place!"}, "title": "clear"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "please"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Lesson 2: Python coding standardsFor this lesson, please read the Python coding standard, PEP 8."}, "title": "please"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The best explanation of what your code does is, if you write it correctly, your code itself."}, "title": "correctly"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test as completely by hand as you can: don't just test that your code fetches the data from the DB correctly: test that it still works properly if there is no data in the DB, or, indeed, if there is no DB!"}, "title": "correctly"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You might get away with writing day_of_week = day mod 7, since that number probably will never change."}, "title": "probably"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A function named handle_yearly_taxes() is doing one job, but probably way to big a job."}, "title": "probably"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "many"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "many"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "property"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No one who ever had a tax lien can sell their property, because the lien never gets cleared."}, "title": "property"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Different languages have different conventions for how to name variables (camelCase, with_underscores, MixedCase, and so on), how to space operators, where to put braces, and so on."}, "title": "different"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "\"The best programs are written so that computing machines can perform them quickly and so that human beings can understand them clearly."}, "title": "perform"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Funcitons that perform a single job are simpler to understand, easier to change or eliminate, and render the overall system more comprehensible."}, "title": "perform"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "used"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A function named handle_yearly_taxes() is doing one job, but probably way to big a job."}, "title": "hand"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "hand"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test as completely by hand as you can: don't just test that your code fetches the data from the DB correctly: test that it still works properly if there is no data in the DB, or, indeed, if there is no DB!"}, "title": "hand"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "database"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "well"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Our JavaScript team is choosing a standard at present, and soon we will link to that here as well."}, "title": "well"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This will be fine... until NYU adopts a tri-mester system."}, "title": "..."}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "..."}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Programming FundamentalsOur modern digital creations are complex: a key job of programmers is to express that complexity as simply as possible."}, "title": "possible"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "possible"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Programming FundamentalsOur modern digital creations are complex: a key job of programmers is to express that complexity as simply as possible."}, "title": "mod"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "mod"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You might get away with writing day_of_week = day mod 7, since that number probably will never change."}, "title": "mod"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But you really ought to write hour_of_day = hour mod CLOCK_PERIOD, since both 12 and 24 hour timekeeping methods exist."}, "title": "mod"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Irregular indentation is a significant source of bugs, as people modifying the code will make mistakes, for example, about which else goes with which if."}, "title": "mod"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "comments"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Funcitons that perform a single job are simpler to understand, easier to change or eliminate, and render the overall system more comprehensible."}, "title": "eliminate"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "eliminate"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "-- Donald Knuth Lesson 1: Some programming fundamentalsHumans have been programming computers for seven or so decades now."}, "title": "fundamentals"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It means that any part of your system that might ever need to change should have a single place where you can make the change."}, "title": "single"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Funcitons that perform a single job are simpler to understand, easier to change or eliminate, and render the overall system more comprehensible."}, "title": "single"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "single"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But you really ought to write hour_of_day = hour mod CLOCK_PERIOD, since both 12 and 24 hour timekeeping methods exist."}, "title": "exist"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "These languages exist for humans, not for computers: they make it easier for us to understand and reason about what a program will do."}, "title": "exist"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Go for the golden mean in naming."}, "title": "naming"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "naming"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "'s"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A more reasonable middle ground might be something like calc_tax_rate(), where an employee's W2 might be a parameter for the function."}, "title": "'s"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "algorithm"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "results"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "\"The best programs are written so that computing machines can perform them quickly and so that human beings can understand them clearly."}, "title": "per"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is very tempting, when coding your NYU scheduling app, to write code assuming there are two (major) semesters per year."}, "title": "per"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Funcitons that perform a single job are simpler to understand, easier to change or eliminate, and render the overall system more comprehensible."}, "title": "per"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "per"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No one who ever had a tax lien can sell their property, because the lien never gets cleared."}, "title": "per"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It would make more sense to have create_tax_roll(), calculate_taxes(), send_bills(), record_payments(), and perhaps more."}, "title": "per"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Format and indent properly."}, "title": "per"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Different languages have different conventions for how to name variables (camelCase, with_underscores, MixedCase, and so on), how to space operators, where to put braces, and so on."}, "title": "per"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test as completely by hand as you can: don't just test that your code fetches the data from the DB correctly: test that it still works properly if there is no data in the DB, or, indeed, if there is no DB!"}, "title": "per"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "(\"Properly\" here could mean \"Display an informative error message instead of crashing.\")"}, "title": "per"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "microservice"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But you really ought to write hour_of_day = hour mod CLOCK_PERIOD, since both 12 and 24 hour timekeeping methods exist."}, "title": "hour_of_day"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "literary"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It would make more sense to have create_tax_roll(), calculate_taxes(), send_bills(), record_payments(), and perhaps more."}, "title": "send_bills"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "include"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is a very good example of what a coding standard is like, and most of the guidelines can be applied in other languages."}, "title": "applied"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No magic constants."}, "title": "magic"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You might get away with writing day_of_week = day mod 7, since that number probably will never change."}, "title": "day_of_week"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "-- Donald Knuth Lesson 1: Some programming fundamentalsHumans have been programming computers for seven or so decades now."}, "title": "--"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Our JavaScript team is choosing a standard at present, and soon we will link to that here as well."}, "title": "team"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "findings"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You should follow those conventions, unless there is a strong reason not to."}, "title": "follow"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This will be fine... until NYU adopts a tri-mester system."}, "title": "tri-mester"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "\"The best programs are written so that computing machines can perform them quickly and so that human beings can understand them clearly."}, "title": "machines"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DRY This stands for Don't Repeat Yourself!"}, "title": "stands"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "current"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Irregular indentation is a significant source of bugs, as people modifying the code will make mistakes, for example, about which else goes with which if."}, "title": "goes"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A more reasonable middle ground might be something like calc_tax_rate(), where an employee's W2 might be a parameter for the function."}, "title": "ground"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This is related to the previous principle, but focuses on the size of the one job that should be done."}, "title": "focuses"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You should follow those conventions, unless there is a strong reason not to."}, "title": "strong"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Consistent indentation is especially important: it allows a reader of your code to easily line up blocks of control."}, "title": "allows"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test as completely by hand as you can: don't just test that your code fetches the data from the DB correctly: test that it still works properly if there is no data in the DB, or, indeed, if there is no DB!"}, "title": "completely"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A more reasonable middle ground might be something like calc_tax_rate(), where an employee's W2 might be a parameter for the function."}, "title": "calc_tax_rate"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Go for the golden mean in naming."}, "title": "golden"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A function named handle_yearly_taxes() is doing one job, but probably way to big a job."}, "title": "named"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is very tempting, when coding your NYU scheduling app, to write code assuming there are two (major) semesters per year."}, "title": "app"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "app"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is a very good example of what a coding standard is like, and most of the guidelines can be applied in other languages."}, "title": "app"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Irregular indentation is a significant source of bugs, as people modifying the code will make mistakes, for example, about which else goes with which if."}, "title": "modifying"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "cloud"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "use"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No one who ever had a tax lien can sell their property, because the lien never gets cleared."}, "title": "use"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This is related to the previous principle, but focuses on the size of the one job that should be done."}, "title": "use"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "use"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But commenting is no substitute for writing clear, readable code in the first place!"}, "title": "readable"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "type"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Different languages have different conventions for how to name variables (camelCase, with_underscores, MixedCase, and so on), how to space operators, where to put braces, and so on."}, "title": "operators"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "concepts"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Consistent indentation is especially important: it allows a reader of your code to easily line up blocks of control."}, "title": "control"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "topic"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It would make more sense to have create_tax_roll(), calculate_taxes(), send_bills(), record_payments(), and perhaps more."}, "title": "sense"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is very tempting, when coding your NYU scheduling app, to write code assuming there are two (major) semesters per year."}, "title": "scheduling"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Funcitons that perform a single job are simpler to understand, easier to change or eliminate, and render the overall system more comprehensible."}, "title": "end"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It would make more sense to have create_tax_roll(), calculate_taxes(), send_bills(), record_payments(), and perhaps more."}, "title": "end"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "And all higher-level languages need to be translated into such code in the end."}, "title": "end"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You might get away with writing day_of_week = day mod 7, since that number probably will never change."}, "title": "get"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No one who ever had a tax lien can sell their property, because the lien never gets cleared."}, "title": "get"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Write an automated test to go with every program or new feature you write."}, "title": "feature"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "hot"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The upshot: you should look at your code as being every bit as much about communicating to humans as about directing a computer."}, "title": "hot"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A more reasonable middle ground might be something like calc_tax_rate(), where an employee's W2 might be a parameter for the function."}, "title": "parameter"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The upshot: you should look at your code as being every bit as much about communicating to humans as about directing a computer."}, "title": "communicating"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Funcitons that perform a single job are simpler to understand, easier to change or eliminate, and render the overall system more comprehensible."}, "title": "overall"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "produce"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No magic constants."}, "title": "constants"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Keep functions short."}, "title": "short"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "natural"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "lines"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is a very good example of what a coding standard is like, and most of the guidelines can be applied in other languages."}, "title": "lines"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Irregular indentation is a significant source of bugs, as people modifying the code will make mistakes, for example, about which else goes with which if."}, "title": "bugs"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It would make more sense to have create_tax_roll(), calculate_taxes(), send_bills(), record_payments(), and perhaps more."}, "title": "perhaps"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Programming FundamentalsOur modern digital creations are complex: a key job of programmers is to express that complexity as simply as possible."}, "title": "complexity"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "order"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "six"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test as completely by hand as you can: don't just test that your code fetches the data from the DB correctly: test that it still works properly if there is no data in the DB, or, indeed, if there is no DB!"}, "title": "indeed"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Our JavaScript team is choosing a standard at present, and soon we will link to that here as well."}, "title": "soon"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test as completely by hand as you can: don't just test that your code fetches the data from the DB correctly: test that it still works properly if there is no data in the DB, or, indeed, if there is no DB!"}, "title": "still"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "forms"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Programming FundamentalsOur modern digital creations are complex: a key job of programmers is to express that complexity as simply as possible."}, "title": "creations"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "happened"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is a very good example of what a coding standard is like, and most of the guidelines can be applied in other languages."}, "title": "good"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "practice"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You might get away with writing day_of_week = day mod 7, since that number probably will never change."}, "title": "day"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But you really ought to write hour_of_day = hour mod CLOCK_PERIOD, since both 12 and 24 hour timekeeping methods exist."}, "title": "day"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Consistent indentation is especially important: it allows a reader of your code to easily line up blocks of control."}, "title": "easily"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "term"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A function named handle_yearly_taxes() is doing one job, but probably way to big a job."}, "title": "name"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Different languages have different conventions for how to name variables (camelCase, with_underscores, MixedCase, and so on), how to space operators, where to put braces, and so on."}, "title": "name"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "name"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "name"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "name"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A more reasonable middle ground might be something like calc_tax_rate(), where an employee's W2 might be a parameter for the function."}, "title": "reasonable"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "found"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "essayist"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The upshot: you should look at your code as being every bit as much about communicating to humans as about directing a computer."}, "title": "directing"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This is related to the previous principle, but focuses on the size of the one job that should be done."}, "title": "related"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "absurdly"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is very tempting, when coding your NYU scheduling app, to write code assuming there are two (major) semesters per year."}, "title": "year"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A function named handle_yearly_taxes() is doing one job, but probably way to big a job."}, "title": "year"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Programming FundamentalsOur modern digital creations are complex: a key job of programmers is to express that complexity as simply as possible."}, "title": "programmer"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "programmer"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "programmer"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This is a special case of DRY."}, "title": "special"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Consistent indentation is especially important: it allows a reader of your code to easily line up blocks of control."}, "title": "special"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "special"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But you really ought to write hour_of_day = hour mod CLOCK_PERIOD, since both 12 and 24 hour timekeeping methods exist."}, "title": "really"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Different languages have different conventions for how to name variables (camelCase, with_underscores, MixedCase, and so on), how to space operators, where to put braces, and so on."}, "title": "space"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "correct"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The best explanation of what your code does is, if you write it correctly, your code itself."}, "title": "correct"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test as completely by hand as you can: don't just test that your code fetches the data from the DB correctly: test that it still works properly if there is no data in the DB, or, indeed, if there is no DB!"}, "title": "correct"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "calc_taxes"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "\"The best programs are written so that computing machines can perform them quickly and so that human beings can understand them clearly."}, "title": "put"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "-- Donald Knuth Lesson 1: Some programming fundamentalsHumans have been programming computers for seven or so decades now."}, "title": "put"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Different languages have different conventions for how to name variables (camelCase, with_underscores, MixedCase, and so on), how to space operators, where to put braces, and so on."}, "title": "put"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "These languages exist for humans, not for computers: they make it easier for us to understand and reason about what a program will do."}, "title": "put"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The upshot: you should look at your code as being every bit as much about communicating to humans as about directing a computer."}, "title": "put"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "put"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "generate"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "definition"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Format and indent properly."}, "title": "indent"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Consistent indentation is especially important: it allows a reader of your code to easily line up blocks of control."}, "title": "indent"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Irregular indentation is a significant source of bugs, as people modifying the code will make mistakes, for example, about which else goes with which if."}, "title": "indent"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But you really ought to write hour_of_day = hour mod CLOCK_PERIOD, since both 12 and 24 hour timekeeping methods exist."}, "title": "keep"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "unpaid"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is very tempting, when coding your NYU scheduling app, to write code assuming there are two (major) semesters per year."}, "title": "tempting"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But commenting is no substitute for writing clear, readable code in the first place!"}, "title": "first"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is very tempting, when coding your NYU scheduling app, to write code assuming there are two (major) semesters per year."}, "title": "major"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Funcitons that perform a single job are simpler to understand, easier to change or eliminate, and render the overall system more comprehensible."}, "title": "render"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You might get away with writing day_of_week = day mod 7, since that number probably will never change."}, "title": "number"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test as completely by hand as you can: don't just test that your code fetches the data from the DB correctly: test that it still works properly if there is no data in the DB, or, indeed, if there is no DB!"}, "title": "fetches"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This is related to the previous principle, but focuses on the size of the one job that should be done."}, "title": "done"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "(\"Properly\" here could mean \"Display an informative error message instead of crashing.\")"}, "title": "message"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Different languages have different conventions for how to name variables (camelCase, with_underscores, MixedCase, and so on), how to space operators, where to put braces, and so on."}, "title": "braces"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This is related to the previous principle, but focuses on the size of the one job that should be done."}, "title": "size"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Remember that we could, and once did, write code just as a sequence of 1s and 0s."}, "title": "1s"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "passed"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The upshot: you should look at your code as being every bit as much about communicating to humans as about directing a computer."}, "title": "upshot"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "bits"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This will be fine... until NYU adopts a tri-mester system."}, "title": "adopts"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The best explanation of what your code does is, if you write it correctly, your code itself."}, "title": "explanation"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It means that any part of your system that might ever need to change should have a single place where you can make the change."}, "title": "part"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "part"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't copy blocks of code to wherever you need them in your program: write a function and call it from each of those places."}, "title": "copy"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "So why bother with C, Java, or Python?"}, "title": "bother"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "classes"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "aesthetic"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "w2"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Programming FundamentalsOur modern digital creations are complex: a key job of programmers is to express that complexity as simply as possible."}, "title": "modern"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "And all higher-level languages need to be translated into such code in the end."}, "title": "higher-level"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "\"The best programs are written so that computing machines can perform them quickly and so that human beings can understand them clearly."}, "title": "clearly"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No one who ever had a tax lien can sell their property, because the lien never gets cleared."}, "title": "sell"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "instance"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But commenting is no substitute for writing clear, readable code in the first place!"}, "title": "substitute"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You should follow those conventions, unless there is a strong reason not to."}, "title": "unless"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It would make more sense to have create_tax_roll(), calculate_taxes(), send_bills(), record_payments(), and perhaps more."}, "title": "calculate_taxes"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Irregular indentation is a significant source of bugs, as people modifying the code will make mistakes, for example, about which else goes with which if."}, "title": "significant"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No one who ever had a tax lien can sell their property, because the lien never gets cleared."}, "title": "cleared"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "extremely"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But you really ought to write hour_of_day = hour mod CLOCK_PERIOD, since both 12 and 24 hour timekeeping methods exist."}, "title": "timekeeping"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "traditional"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This is related to the previous principle, but focuses on the size of the one job that should be done."}, "title": "principle"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "came"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Different languages have different conventions for how to name variables (camelCase, with_underscores, MixedCase, and so on), how to space operators, where to put braces, and so on."}, "title": "came"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "particularly"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "fine"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This will be fine... until NYU adopts a tri-mester system."}, "title": "fine"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Instead, define a constant NUM_SEMS = 2."}, "title": "fine"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "find"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "find"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "(\"Properly\" here could mean \"Display an informative error message instead of crashing.\")"}, "title": "crashing"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It would make more sense to have create_tax_roll(), calculate_taxes(), send_bills(), record_payments(), and perhaps more."}, "title": "record_payments"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "take_input_of_employee_w2_and_calculate_employee_tax_rate"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "writes"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "employee"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A more reasonable middle ground might be something like calc_tax_rate(), where an employee's W2 might be a parameter for the function."}, "title": "employee"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It means that any part of your system that might ever need to change should have a single place where you can make the change."}, "title": "means"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Programming FundamentalsOur modern digital creations are complex: a key job of programmers is to express that complexity as simply as possible."}, "title": "express"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "taxes"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "taxes"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A function named handle_yearly_taxes() is doing one job, but probably way to big a job."}, "title": "taxes"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It would make more sense to have create_tax_roll(), calculate_taxes(), send_bills(), record_payments(), and perhaps more."}, "title": "taxes"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "contain"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "ignored"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "-- Donald Knuth Lesson 1: Some programming fundamentalsHumans have been programming computers for seven or so decades now."}, "title": "computer"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "These languages exist for humans, not for computers: they make it easier for us to understand and reason about what a program will do."}, "title": "computer"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The upshot: you should look at your code as being every bit as much about communicating to humans as about directing a computer."}, "title": "computer"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "liens"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You might get away with writing day_of_week = day mod 7, since that number probably will never change."}, "title": "away"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "\"The best programs are written so that computing machines can perform them quickly and so that human beings can understand them clearly."}, "title": "written"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Programming FundamentalsOur modern digital creations are complex: a key job of programmers is to express that complexity as simply as possible."}, "title": "key"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Remember that we could, and once did, write code just as a sequence of 1s and 0s."}, "title": "0s"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "cryptic"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "called"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "comment"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But commenting is no substitute for writing clear, readable code in the first place!"}, "title": "comment"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Programming FundamentalsOur modern digital creations are complex: a key job of programmers is to express that complexity as simply as possible."}, "title": "simply"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "unusual"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "\"The best programs are written so that computing machines can perform them quickly and so that human beings can understand them clearly."}, "title": "quickly"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "immense"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The upshot: you should look at your code as being every bit as much about communicating to humans as about directing a computer."}, "title": "much"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But commenting is no substitute for writing clear, readable code in the first place!"}, "title": "commenting"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Our JavaScript team is choosing a standard at present, and soon we will link to that here as well."}, "title": "present"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This is a special case of DRY."}, "title": "case"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The upshot: you should look at your code as being every bit as much about communicating to humans as about directing a computer."}, "title": "look"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "-- Donald Knuth Lesson 1: Some programming fundamentalsHumans have been programming computers for seven or so decades now."}, "title": "decades"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "(\"Properly\" here could mean \"Display an informative error message instead of crashing.\")"}, "title": "error"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "guide"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "guide"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is a very good example of what a coding standard is like, and most of the guidelines can be applied in other languages."}, "title": "guide"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Different languages have different conventions for how to name variables (camelCase, with_underscores, MixedCase, and so on), how to space operators, where to put braces, and so on."}, "title": "with_underscores"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "-- Donald Knuth Lesson 1: Some programming fundamentalsHumans have been programming computers for seven or so decades now."}, "title": "seven"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "dictum"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't copy blocks of code to wherever you need them in your program: write a function and call it from each of those places."}, "title": "wherever"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A more reasonable middle ground might be something like calc_tax_rate(), where an employee's W2 might be a parameter for the function."}, "title": "middle"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "things"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Programming FundamentalsOur modern digital creations are complex: a key job of programmers is to express that complexity as simply as possible."}, "title": "complex"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is very tempting, when coding your NYU scheduling app, to write code assuming there are two (major) semesters per year."}, "title": "semesters"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "widely"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No one who ever had a tax lien can sell their property, because the lien never gets cleared."}, "title": "gets"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "difficult"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "docstrings"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "running"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "uses"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This is related to the previous principle, but focuses on the size of the one job that should be done."}, "title": "uses"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "characters"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "claims"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Comment judiciously."}, "title": "judiciously"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Irregular indentation is a significant source of bugs, as people modifying the code will make mistakes, for example, about which else goes with which if."}, "title": "mistakes"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "\"The best programs are written so that computing machines can perform them quickly and so that human beings can understand them clearly."}, "title": "human"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "These languages exist for humans, not for computers: they make it easier for us to understand and reason about what a program will do."}, "title": "human"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The upshot: you should look at your code as being every bit as much about communicating to humans as about directing a computer."}, "title": "human"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This is related to the previous principle, but focuses on the size of the one job that should be done."}, "title": "previous"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "tables"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "extracted"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Irregular indentation is a significant source of bugs, as people modifying the code will make mistakes, for example, about which else goes with which if."}, "title": "source"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It would make more sense to have create_tax_roll(), calculate_taxes(), send_bills(), record_payments(), and perhaps more."}, "title": "create_tax_roll"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A function named handle_yearly_taxes() is doing one job, but probably way to big a job."}, "title": "handle_yearly_taxes"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Funcitons that perform a single job are simpler to understand, easier to change or eliminate, and render the overall system more comprehensible."}, "title": "comprehensible"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But you really ought to write hour_of_day = hour mod CLOCK_PERIOD, since both 12 and 24 hour timekeeping methods exist."}, "title": "ought"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "(\"Properly\" here could mean \"Display an informative error message instead of crashing.\")"}, "title": "format"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "read"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Consistent indentation is especially important: it allows a reader of your code to easily line up blocks of control."}, "title": "read"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But commenting is no substitute for writing clear, readable code in the first place!"}, "title": "read"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Lesson 2: Python coding standardsFor this lesson, please read the Python coding standard, PEP 8."}, "title": "read"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A function named handle_yearly_taxes() is doing one job, but probably way to big a job."}, "title": "big"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Other ReadingsProgramming Best PracticesFollowing Coding Standards using Flake8"}, "title": "using"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "bit"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The upshot: you should look at your code as being every bit as much about communicating to humans as about directing a computer."}, "title": "bit"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "ignore"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "(\"Properly\" here could mean \"Display an informative error message instead of crashing.\")"}, "title": "informative"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "And all higher-level languages need to be translated into such code in the end."}, "title": "translated"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "mathematical"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But you really ought to write hour_of_day = hour mod CLOCK_PERIOD, since both 12 and 24 hour timekeeping methods exist."}, "title": "methods"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Irregular indentation is a significant source of bugs, as people modifying the code will make mistakes, for example, about which else goes with which if."}, "title": "people"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "examples"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Our JavaScript team is choosing a standard at present, and soon we will link to that here as well."}, "title": "choosing"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "single-letter"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is very tempting, when coding your NYU scheduling app, to write code assuming there are two (major) semesters per year."}, "title": "assuming"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "coders"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "models.py"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "communicate"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Funcitons that perform a single job are simpler to understand, easier to change or eliminate, and render the overall system more comprehensible."}, "title": "simpler"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "within"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is very tempting, when coding your NYU scheduling app, to write code assuming there are two (major) semesters per year."}, "title": "two"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "\"The best programs are written so that computing machines can perform them quickly and so that human beings can understand them clearly."}, "title": "beings"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Remember that we could, and once did, write code just as a sequence of 1s and 0s."}, "title": "sequence"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "long"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "long"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "popularity"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Our JavaScript team is choosing a standard at present, and soon we will link to that here as well."}, "title": "link"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Write an automated test to go with every program or new feature you write."}, "title": "automated"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Consistent indentation is especially important: it allows a reader of your code to easily line up blocks of control."}, "title": "line"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "line"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is a very good example of what a coding standard is like, and most of the guidelines can be applied in other languages."}, "title": "line"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't copy blocks of code to wherever you need them in your program: write a function and call it from each of those places."}, "title": "places"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "us"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No one who ever had a tax lien can sell their property, because the lien never gets cleared."}, "title": "us"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This is related to the previous principle, but focuses on the size of the one job that should be done."}, "title": "us"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Comment judiciously."}, "title": "us"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "us"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Remember that we could, and once did, write code just as a sequence of 1s and 0s."}, "title": "us"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "These languages exist for humans, not for computers: they make it easier for us to understand and reason about what a program will do."}, "title": "us"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "us"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test as completely by hand as you can: don't just test that your code fetches the data from the DB correctly: test that it still works properly if there is no data in the DB, or, indeed, if there is no DB!"}, "title": "us"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Other ReadingsProgramming Best PracticesFollowing Coding Standards using Flake8"}, "title": "us"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "convince"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "later"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No magic constants."}, "title": "constant"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Instead, define a constant NUM_SEMS = 2."}, "title": "constant"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "\"The best programs are written so that computing machines can perform them quickly and so that human beings can understand them clearly."}, "title": "computing"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "file"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "ideally"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "book"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Programming FundamentalsOur modern digital creations are complex: a key job of programmers is to express that complexity as simply as possible."}, "title": "digital"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "explaining"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "stay"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Consistent indentation is especially important: it allows a reader of your code to easily line up blocks of control."}, "title": "important"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Different languages have different conventions for how to name variables (camelCase, with_underscores, MixedCase, and so on), how to space operators, where to put braces, and so on."}, "title": "variable"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "variable"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Irregular indentation is a significant source of bugs, as people modifying the code will make mistakes, for example, about which else goes with which if."}, "title": "else"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "tricky"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "longer"}]
=======
[{"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't copy blocks of code to wherever you need them in your program: write a function and call it from each of those places."}, "title": "code"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "code"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is very tempting, when coding your NYU scheduling app, to write code assuming there are two (major) semesters per year."}, "title": "code"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "code"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Consistent indentation is especially important: it allows a reader of your code to easily line up blocks of control."}, "title": "code"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Irregular indentation is a significant source of bugs, as people modifying the code will make mistakes, for example, about which else goes with which if."}, "title": "code"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "code"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But commenting is no substitute for writing clear, readable code in the first place!"}, "title": "code"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The best explanation of what your code does is, if you write it correctly, your code itself."}, "title": "code"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Remember that we could, and once did, write code just as a sequence of 1s and 0s."}, "title": "code"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "And all higher-level languages need to be translated into such code in the end."}, "title": "code"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The upshot: you should look at your code as being every bit as much about communicating to humans as about directing a computer."}, "title": "code"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test as completely by hand as you can: don't just test that your code fetches the data from the DB correctly: test that it still works properly if there is no data in the DB, or, indeed, if there is no DB!"}, "title": "code"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "write"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't copy blocks of code to wherever you need them in your program: write a function and call it from each of those places."}, "title": "write"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is very tempting, when coding your NYU scheduling app, to write code assuming there are two (major) semesters per year."}, "title": "write"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But you really ought to write hour_of_day = hour mod CLOCK_PERIOD, since both 12 and 24 hour timekeeping methods exist."}, "title": "write"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "write"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The best explanation of what your code does is, if you write it correctly, your code itself."}, "title": "write"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Remember that we could, and once did, write code just as a sequence of 1s and 0s."}, "title": "write"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Write an automated test to go with every program or new feature you write."}, "title": "write"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't copy blocks of code to wherever you need them in your program: write a function and call it from each of those places."}, "title": "function"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Make functions do one job."}, "title": "function"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "function"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "function"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Keep functions short."}, "title": "function"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A function named handle_yearly_taxes() is doing one job, but probably way to big a job."}, "title": "function"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "function"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "function"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A more reasonable middle ground might be something like calc_tax_rate(), where an employee's W2 might be a parameter for the function."}, "title": "function"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "like"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "like"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "like"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "like"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A more reasonable middle ground might be something like calc_tax_rate(), where an employee's W2 might be a parameter for the function."}, "title": "like"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is a very good example of what a coding standard is like, and most of the guidelines can be applied in other languages."}, "title": "like"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is very tempting, when coding your NYU scheduling app, to write code assuming there are two (major) semesters per year."}, "title": "coding"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Lesson 2: Python coding standardsFor this lesson, please read the Python coding standard, PEP 8."}, "title": "coding"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is a very good example of what a coding standard is like, and most of the guidelines can be applied in other languages."}, "title": "coding"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "one"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Make functions do one job."}, "title": "one"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No one who ever had a tax lien can sell their property, because the lien never gets cleared."}, "title": "one"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This is related to the previous principle, but focuses on the size of the one job that should be done."}, "title": "one"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A function named handle_yearly_taxes() is doing one job, but probably way to big a job."}, "title": "one"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Programming FundamentalsOur modern digital creations are complex: a key job of programmers is to express that complexity as simply as possible."}, "title": "job"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Make functions do one job."}, "title": "job"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Funcitons that perform a single job are simpler to understand, easier to change or eliminate, and render the overall system more comprehensible."}, "title": "job"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "job"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This is related to the previous principle, but focuses on the size of the one job that should be done."}, "title": "job"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A function named handle_yearly_taxes() is doing one job, but probably way to big a job."}, "title": "job"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It means that any part of your system that might ever need to change should have a single place where you can make the change."}, "title": "make"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It would make more sense to have create_tax_roll(), calculate_taxes(), send_bills(), record_payments(), and perhaps more."}, "title": "make"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Irregular indentation is a significant source of bugs, as people modifying the code will make mistakes, for example, about which else goes with which if."}, "title": "make"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "These languages exist for humans, not for computers: they make it easier for us to understand and reason about what a program will do."}, "title": "make"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "make"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test, test, test!"}, "title": "test"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Write an automated test to go with every program or new feature you write."}, "title": "test"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test as completely by hand as you can: don't just test that your code fetches the data from the DB correctly: test that it still works properly if there is no data in the DB, or, indeed, if there is no DB!"}, "title": "test"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Programming FundamentalsOur modern digital creations are complex: a key job of programmers is to express that complexity as simply as possible."}, "title": "program"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "\"The best programs are written so that computing machines can perform them quickly and so that human beings can understand them clearly."}, "title": "program"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "program"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "-- Donald Knuth Lesson 1: Some programming fundamentalsHumans have been programming computers for seven or so decades now."}, "title": "program"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "program"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't copy blocks of code to wherever you need them in your program: write a function and call it from each of those places."}, "title": "program"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "program"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "These languages exist for humans, not for computers: they make it easier for us to understand and reason about what a program will do."}, "title": "program"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "program"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Write an automated test to go with every program or new feature you write."}, "title": "program"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "names"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "names"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "names"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "data"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test as completely by hand as you can: don't just test that your code fetches the data from the DB correctly: test that it still works properly if there is no data in the DB, or, indeed, if there is no DB!"}, "title": "data"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It means that any part of your system that might ever need to change should have a single place where you can make the change."}, "title": "might"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You might get away with writing day_of_week = day mod 7, since that number probably will never change."}, "title": "might"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A more reasonable middle ground might be something like calc_tax_rate(), where an employee's W2 might be a parameter for the function."}, "title": "might"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "\"The best programs are written so that computing machines can perform them quickly and so that human beings can understand them clearly."}, "title": "best"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "best"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The best explanation of what your code does is, if you write it correctly, your code itself."}, "title": "best"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DRY This stands for Don't Repeat Yourself!"}, "title": "n't"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't copy blocks of code to wherever you need them in your program: write a function and call it from each of those places."}, "title": "n't"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "n't"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test as completely by hand as you can: don't just test that your code fetches the data from the DB correctly: test that it still works properly if there is no data in the DB, or, indeed, if there is no DB!"}, "title": "n't"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "way"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "way"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You might get away with writing day_of_week = day mod 7, since that number probably will never change."}, "title": "way"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A function named handle_yearly_taxes() is doing one job, but probably way to big a job."}, "title": "way"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "way"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Make functions do one job."}, "title": "functions"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Keep functions short."}, "title": "functions"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "functions"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "functions"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Different languages have different conventions for how to name variables (camelCase, with_underscores, MixedCase, and so on), how to space operators, where to put braces, and so on."}, "title": "languages"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "And all higher-level languages need to be translated into such code in the end."}, "title": "languages"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "These languages exist for humans, not for computers: they make it easier for us to understand and reason about what a program will do."}, "title": "languages"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is a very good example of what a coding standard is like, and most of the guidelines can be applied in other languages."}, "title": "languages"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "tax"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "tax"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No one who ever had a tax lien can sell their property, because the lien never gets cleared."}, "title": "tax"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A function named handle_yearly_taxes() is doing one job, but probably way to big a job."}, "title": "tax"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It would make more sense to have create_tax_roll(), calculate_taxes(), send_bills(), record_payments(), and perhaps more."}, "title": "tax"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "tax"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A more reasonable middle ground might be something like calc_tax_rate(), where an employee's W2 might be a parameter for the function."}, "title": "tax"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "mean"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It means that any part of your system that might ever need to change should have a single place where you can make the change."}, "title": "mean"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Go for the golden mean in naming."}, "title": "mean"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "(\"Properly\" here could mean \"Display an informative error message instead of crashing.\")"}, "title": "mean"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "-- Donald Knuth Lesson 1: Some programming fundamentalsHumans have been programming computers for seven or so decades now."}, "title": "programming"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It means that any part of your system that might ever need to change should have a single place where you can make the change."}, "title": "place"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't copy blocks of code to wherever you need them in your program: write a function and call it from each of those places."}, "title": "place"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "place"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But commenting is no substitute for writing clear, readable code in the first place!"}, "title": "place"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It means that any part of your system that might ever need to change should have a single place where you can make the change."}, "title": "system"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This will be fine... until NYU adopts a tri-mester system."}, "title": "system"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Funcitons that perform a single job are simpler to understand, easier to change or eliminate, and render the overall system more comprehensible."}, "title": "system"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "system"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It means that any part of your system that might ever need to change should have a single place where you can make the change."}, "title": "need"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't copy blocks of code to wherever you need them in your program: write a function and call it from each of those places."}, "title": "need"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "And all higher-level languages need to be translated into such code in the end."}, "title": "need"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "define"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Instead, define a constant NUM_SEMS = 2."}, "title": "define"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "\"The best programs are written so that computing machines can perform them quickly and so that human beings can understand them clearly."}, "title": "understand"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Funcitons that perform a single job are simpler to understand, easier to change or eliminate, and render the overall system more comprehensible."}, "title": "understand"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "These languages exist for humans, not for computers: they make it easier for us to understand and reason about what a program will do."}, "title": "understand"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Lesson 2: Python coding standardsFor this lesson, please read the Python coding standard, PEP 8."}, "title": "standard"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is a very good example of what a coding standard is like, and most of the guidelines can be applied in other languages."}, "title": "standard"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Our JavaScript team is choosing a standard at present, and soon we will link to that here as well."}, "title": "standard"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "works"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test as completely by hand as you can: don't just test that your code fetches the data from the DB correctly: test that it still works properly if there is no data in the DB, or, indeed, if there is no DB!"}, "title": "works"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Lesson 2: Python coding standardsFor this lesson, please read the Python coding standard, PEP 8."}, "title": "lesson"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "also"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "also"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "also"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The upshot: you should look at your code as being every bit as much about communicating to humans as about directing a computer."}, "title": "every"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Write an automated test to go with every program or new feature you write."}, "title": "every"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "guidelines"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is a very good example of what a coding standard is like, and most of the guidelines can be applied in other languages."}, "title": "guidelines"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "new"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Write an automated test to go with every program or new feature you write."}, "title": "new"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It means that any part of your system that might ever need to change should have a single place where you can make the change."}, "title": "ever"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't copy blocks of code to wherever you need them in your program: write a function and call it from each of those places."}, "title": "ever"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You might get away with writing day_of_week = day mod 7, since that number probably will never change."}, "title": "ever"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No one who ever had a tax lien can sell their property, because the lien never gets cleared."}, "title": "ever"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The upshot: you should look at your code as being every bit as much about communicating to humans as about directing a computer."}, "title": "ever"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Write an automated test to go with every program or new feature you write."}, "title": "ever"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You might get away with writing day_of_week = day mod 7, since that number probably will never change."}, "title": "never"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No one who ever had a tax lien can sell their property, because the lien never gets cleared."}, "title": "never"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It means that any part of your system that might ever need to change should have a single place where you can make the change."}, "title": "change"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You might get away with writing day_of_week = day mod 7, since that number probably will never change."}, "title": "change"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Funcitons that perform a single job are simpler to understand, easier to change or eliminate, and render the overall system more comprehensible."}, "title": "change"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Consistent indentation is especially important: it allows a reader of your code to easily line up blocks of control."}, "title": "indentation"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Irregular indentation is a significant source of bugs, as people modifying the code will make mistakes, for example, about which else goes with which if."}, "title": "indentation"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "county"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "county"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "would"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It would make more sense to have create_tax_roll(), calculate_taxes(), send_bills(), record_payments(), and perhaps more."}, "title": "would"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't copy blocks of code to wherever you need them in your program: write a function and call it from each of those places."}, "title": "call"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "call"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "call"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But you really ought to write hour_of_day = hour mod CLOCK_PERIOD, since both 12 and 24 hour timekeeping methods exist."}, "title": "hour"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Irregular indentation is a significant source of bugs, as people modifying the code will make mistakes, for example, about which else goes with which if."}, "title": "example"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "example"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is a very good example of what a coding standard is like, and most of the guidelines can be applied in other languages."}, "title": "example"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "something"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A more reasonable middle ground might be something like calc_tax_rate(), where an employee's W2 might be a parameter for the function."}, "title": "something"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't copy blocks of code to wherever you need them in your program: write a function and call it from each of those places."}, "title": "blocks"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Consistent indentation is especially important: it allows a reader of your code to easily line up blocks of control."}, "title": "blocks"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You might get away with writing day_of_week = day mod 7, since that number probably will never change."}, "title": "writing"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But commenting is no substitute for writing clear, readable code in the first place!"}, "title": "writing"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Funcitons that perform a single job are simpler to understand, easier to change or eliminate, and render the overall system more comprehensible."}, "title": "easier"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "These languages exist for humans, not for computers: they make it easier for us to understand and reason about what a program will do."}, "title": "easier"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Different languages have different conventions for how to name variables (camelCase, with_underscores, MixedCase, and so on), how to space operators, where to put braces, and so on."}, "title": "conventions"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You should follow those conventions, unless there is a strong reason not to."}, "title": "conventions"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You might get away with writing day_of_week = day mod 7, since that number probably will never change."}, "title": "since"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But you really ought to write hour_of_day = hour mod CLOCK_PERIOD, since both 12 and 24 hour timekeeping methods exist."}, "title": "since"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "reader"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Consistent indentation is especially important: it allows a reader of your code to easily line up blocks of control."}, "title": "reader"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You should follow those conventions, unless there is a strong reason not to."}, "title": "reason"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "These languages exist for humans, not for computers: they make it easier for us to understand and reason about what a program will do."}, "title": "reason"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A more reasonable middle ground might be something like calc_tax_rate(), where an employee's W2 might be a parameter for the function."}, "title": "reason"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Remember that we could, and once did, write code just as a sequence of 1s and 0s."}, "title": "could"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "(\"Properly\" here could mean \"Display an informative error message instead of crashing.\")"}, "title": "could"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "-- Donald Knuth Lesson 1: Some programming fundamentalsHumans have been programming computers for seven or so decades now."}, "title": "computers"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "These languages exist for humans, not for computers: they make it easier for us to understand and reason about what a program will do."}, "title": "computers"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Different languages have different conventions for how to name variables (camelCase, with_underscores, MixedCase, and so on), how to space operators, where to put braces, and so on."}, "title": "variables"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "variables"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "\"The best programs are written so that computing machines can perform them quickly and so that human beings can understand them clearly."}, "title": "programs"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "programs"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Programming FundamentalsOur modern digital creations are complex: a key job of programmers is to express that complexity as simply as possible."}, "title": "programmers"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "programmers"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Consistent indentation is especially important: it allows a reader of your code to easily line up blocks of control."}, "title": "especially"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "especially"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "\"The best programs are written so that computing machines can perform them quickly and so that human beings can understand them clearly."}, "title": "clear"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "clear"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No one who ever had a tax lien can sell their property, because the lien never gets cleared."}, "title": "clear"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But commenting is no substitute for writing clear, readable code in the first place!"}, "title": "clear"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "These languages exist for humans, not for computers: they make it easier for us to understand and reason about what a program will do."}, "title": "humans"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The upshot: you should look at your code as being every bit as much about communicating to humans as about directing a computer."}, "title": "humans"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "please"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Lesson 2: Python coding standardsFor this lesson, please read the Python coding standard, PEP 8."}, "title": "please"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The best explanation of what your code does is, if you write it correctly, your code itself."}, "title": "correctly"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test as completely by hand as you can: don't just test that your code fetches the data from the DB correctly: test that it still works properly if there is no data in the DB, or, indeed, if there is no DB!"}, "title": "correctly"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You might get away with writing day_of_week = day mod 7, since that number probably will never change."}, "title": "probably"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A function named handle_yearly_taxes() is doing one job, but probably way to big a job."}, "title": "probably"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "many"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "many"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "property"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No one who ever had a tax lien can sell their property, because the lien never gets cleared."}, "title": "property"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "\"The best programs are written so that computing machines can perform them quickly and so that human beings can understand them clearly."}, "title": "perform"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Funcitons that perform a single job are simpler to understand, easier to change or eliminate, and render the overall system more comprehensible."}, "title": "perform"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "used"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A function named handle_yearly_taxes() is doing one job, but probably way to big a job."}, "title": "hand"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "hand"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test as completely by hand as you can: don't just test that your code fetches the data from the DB correctly: test that it still works properly if there is no data in the DB, or, indeed, if there is no DB!"}, "title": "hand"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "database"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This will be fine... until NYU adopts a tri-mester system."}, "title": "..."}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "..."}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Programming FundamentalsOur modern digital creations are complex: a key job of programmers is to express that complexity as simply as possible."}, "title": "possible"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "possible"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Programming FundamentalsOur modern digital creations are complex: a key job of programmers is to express that complexity as simply as possible."}, "title": "mod"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "mod"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You might get away with writing day_of_week = day mod 7, since that number probably will never change."}, "title": "mod"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But you really ought to write hour_of_day = hour mod CLOCK_PERIOD, since both 12 and 24 hour timekeeping methods exist."}, "title": "mod"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Irregular indentation is a significant source of bugs, as people modifying the code will make mistakes, for example, about which else goes with which if."}, "title": "mod"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "comments"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Funcitons that perform a single job are simpler to understand, easier to change or eliminate, and render the overall system more comprehensible."}, "title": "eliminate"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "eliminate"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "lien"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No one who ever had a tax lien can sell their property, because the lien never gets cleared."}, "title": "lien"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Format and indent properly."}, "title": "properly"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test as completely by hand as you can: don't just test that your code fetches the data from the DB correctly: test that it still works properly if there is no data in the DB, or, indeed, if there is no DB!"}, "title": "properly"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It means that any part of your system that might ever need to change should have a single place where you can make the change."}, "title": "single"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Funcitons that perform a single job are simpler to understand, easier to change or eliminate, and render the overall system more comprehensible."}, "title": "single"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "single"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "'s"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A more reasonable middle ground might be something like calc_tax_rate(), where an employee's W2 might be a parameter for the function."}, "title": "'s"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "algorithm"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "results"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "\"The best programs are written so that computing machines can perform them quickly and so that human beings can understand them clearly."}, "title": "per"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is very tempting, when coding your NYU scheduling app, to write code assuming there are two (major) semesters per year."}, "title": "per"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Funcitons that perform a single job are simpler to understand, easier to change or eliminate, and render the overall system more comprehensible."}, "title": "per"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "per"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No one who ever had a tax lien can sell their property, because the lien never gets cleared."}, "title": "per"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It would make more sense to have create_tax_roll(), calculate_taxes(), send_bills(), record_payments(), and perhaps more."}, "title": "per"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Format and indent properly."}, "title": "per"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Different languages have different conventions for how to name variables (camelCase, with_underscores, MixedCase, and so on), how to space operators, where to put braces, and so on."}, "title": "per"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test as completely by hand as you can: don't just test that your code fetches the data from the DB correctly: test that it still works properly if there is no data in the DB, or, indeed, if there is no DB!"}, "title": "per"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "(\"Properly\" here could mean \"Display an informative error message instead of crashing.\")"}, "title": "per"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "go"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "go"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Irregular indentation is a significant source of bugs, as people modifying the code will make mistakes, for example, about which else goes with which if."}, "title": "go"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Go for the golden mean in naming."}, "title": "go"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "go"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Write an automated test to go with every program or new feature you write."}, "title": "go"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is a very good example of what a coding standard is like, and most of the guidelines can be applied in other languages."}, "title": "go"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You should follow those conventions, unless there is a strong reason not to."}, "title": "follow"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But you really ought to write hour_of_day = hour mod CLOCK_PERIOD, since both 12 and 24 hour timekeeping methods exist."}, "title": "hour_of_day"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "literary"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Our JavaScript team is choosing a standard at present, and soon we will link to that here as well."}, "title": "present"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It would make more sense to have create_tax_roll(), calculate_taxes(), send_bills(), record_payments(), and perhaps more."}, "title": "send_bills"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "include"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is a very good example of what a coding standard is like, and most of the guidelines can be applied in other languages."}, "title": "applied"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No magic constants."}, "title": "magic"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You might get away with writing day_of_week = day mod 7, since that number probably will never change."}, "title": "day_of_week"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "-- Donald Knuth Lesson 1: Some programming fundamentalsHumans have been programming computers for seven or so decades now."}, "title": "--"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "correct"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The best explanation of what your code does is, if you write it correctly, your code itself."}, "title": "correct"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test as completely by hand as you can: don't just test that your code fetches the data from the DB correctly: test that it still works properly if there is no data in the DB, or, indeed, if there is no DB!"}, "title": "correct"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Our JavaScript team is choosing a standard at present, and soon we will link to that here as well."}, "title": "team"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "findings"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "microservice"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This will be fine... until NYU adopts a tri-mester system."}, "title": "tri-mester"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "\"The best programs are written so that computing machines can perform them quickly and so that human beings can understand them clearly."}, "title": "machines"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DRY This stands for Don't Repeat Yourself!"}, "title": "stands"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "current"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Irregular indentation is a significant source of bugs, as people modifying the code will make mistakes, for example, about which else goes with which if."}, "title": "goes"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "(\"Properly\" here could mean \"Display an informative error message instead of crashing.\")"}, "title": "crashing"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This is related to the previous principle, but focuses on the size of the one job that should be done."}, "title": "focuses"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You should follow those conventions, unless there is a strong reason not to."}, "title": "strong"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Consistent indentation is especially important: it allows a reader of your code to easily line up blocks of control."}, "title": "allows"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test as completely by hand as you can: don't just test that your code fetches the data from the DB correctly: test that it still works properly if there is no data in the DB, or, indeed, if there is no DB!"}, "title": "completely"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A more reasonable middle ground might be something like calc_tax_rate(), where an employee's W2 might be a parameter for the function."}, "title": "calc_tax_rate"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Go for the golden mean in naming."}, "title": "golden"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A function named handle_yearly_taxes() is doing one job, but probably way to big a job."}, "title": "named"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is very tempting, when coding your NYU scheduling app, to write code assuming there are two (major) semesters per year."}, "title": "app"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "app"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is a very good example of what a coding standard is like, and most of the guidelines can be applied in other languages."}, "title": "app"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Irregular indentation is a significant source of bugs, as people modifying the code will make mistakes, for example, about which else goes with which if."}, "title": "modifying"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "use"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No one who ever had a tax lien can sell their property, because the lien never gets cleared."}, "title": "use"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This is related to the previous principle, but focuses on the size of the one job that should be done."}, "title": "use"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "use"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But commenting is no substitute for writing clear, readable code in the first place!"}, "title": "readable"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "type"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Different languages have different conventions for how to name variables (camelCase, with_underscores, MixedCase, and so on), how to space operators, where to put braces, and so on."}, "title": "operators"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "concepts"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "topic"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It would make more sense to have create_tax_roll(), calculate_taxes(), send_bills(), record_payments(), and perhaps more."}, "title": "sense"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is very tempting, when coding your NYU scheduling app, to write code assuming there are two (major) semesters per year."}, "title": "scheduling"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You might get away with writing day_of_week = day mod 7, since that number probably will never change."}, "title": "get"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No one who ever had a tax lien can sell their property, because the lien never gets cleared."}, "title": "get"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Write an automated test to go with every program or new feature you write."}, "title": "feature"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "hot"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The upshot: you should look at your code as being every bit as much about communicating to humans as about directing a computer."}, "title": "hot"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "(\"Properly\" here could mean \"Display an informative error message instead of crashing.\")"}, "title": "instead"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A more reasonable middle ground might be something like calc_tax_rate(), where an employee's W2 might be a parameter for the function."}, "title": "parameter"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The upshot: you should look at your code as being every bit as much about communicating to humans as about directing a computer."}, "title": "communicating"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "produce"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "natural"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "remember"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "lines"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is a very good example of what a coding standard is like, and most of the guidelines can be applied in other languages."}, "title": "lines"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Irregular indentation is a significant source of bugs, as people modifying the code will make mistakes, for example, about which else goes with which if."}, "title": "bugs"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It would make more sense to have create_tax_roll(), calculate_taxes(), send_bills(), record_payments(), and perhaps more."}, "title": "perhaps"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Programming FundamentalsOur modern digital creations are complex: a key job of programmers is to express that complexity as simply as possible."}, "title": "complexity"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "order"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "six"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test as completely by hand as you can: don't just test that your code fetches the data from the DB correctly: test that it still works properly if there is no data in the DB, or, indeed, if there is no DB!"}, "title": "indeed"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Our JavaScript team is choosing a standard at present, and soon we will link to that here as well."}, "title": "soon"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test as completely by hand as you can: don't just test that your code fetches the data from the DB correctly: test that it still works properly if there is no data in the DB, or, indeed, if there is no DB!"}, "title": "still"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "forms"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Programming FundamentalsOur modern digital creations are complex: a key job of programmers is to express that complexity as simply as possible."}, "title": "creations"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "happened"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is a very good example of what a coding standard is like, and most of the guidelines can be applied in other languages."}, "title": "good"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "practice"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You might get away with writing day_of_week = day mod 7, since that number probably will never change."}, "title": "day"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But you really ought to write hour_of_day = hour mod CLOCK_PERIOD, since both 12 and 24 hour timekeeping methods exist."}, "title": "day"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Consistent indentation is especially important: it allows a reader of your code to easily line up blocks of control."}, "title": "easily"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "term"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A function named handle_yearly_taxes() is doing one job, but probably way to big a job."}, "title": "name"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Different languages have different conventions for how to name variables (camelCase, with_underscores, MixedCase, and so on), how to space operators, where to put braces, and so on."}, "title": "name"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "name"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "name"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "name"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A more reasonable middle ground might be something like calc_tax_rate(), where an employee's W2 might be a parameter for the function."}, "title": "reasonable"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "found"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "essayist"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The upshot: you should look at your code as being every bit as much about communicating to humans as about directing a computer."}, "title": "directing"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This is related to the previous principle, but focuses on the size of the one job that should be done."}, "title": "related"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "absurdly"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Programming FundamentalsOur modern digital creations are complex: a key job of programmers is to express that complexity as simply as possible."}, "title": "programmer"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "programmer"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "programmer"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Lesson 2: Python coding standardsFor this lesson, please read the Python coding standard, PEP 8."}, "title": "standards"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This is a special case of DRY."}, "title": "special"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Consistent indentation is especially important: it allows a reader of your code to easily line up blocks of control."}, "title": "special"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "special"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But you really ought to write hour_of_day = hour mod CLOCK_PERIOD, since both 12 and 24 hour timekeeping methods exist."}, "title": "really"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Different languages have different conventions for how to name variables (camelCase, with_underscores, MixedCase, and so on), how to space operators, where to put braces, and so on."}, "title": "space"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "calc_taxes"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "\"The best programs are written so that computing machines can perform them quickly and so that human beings can understand them clearly."}, "title": "put"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "-- Donald Knuth Lesson 1: Some programming fundamentalsHumans have been programming computers for seven or so decades now."}, "title": "put"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Different languages have different conventions for how to name variables (camelCase, with_underscores, MixedCase, and so on), how to space operators, where to put braces, and so on."}, "title": "put"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "These languages exist for humans, not for computers: they make it easier for us to understand and reason about what a program will do."}, "title": "put"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The upshot: you should look at your code as being every bit as much about communicating to humans as about directing a computer."}, "title": "put"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "put"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "generate"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "definition"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Format and indent properly."}, "title": "indent"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Consistent indentation is especially important: it allows a reader of your code to easily line up blocks of control."}, "title": "indent"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Irregular indentation is a significant source of bugs, as people modifying the code will make mistakes, for example, about which else goes with which if."}, "title": "indent"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "unpaid"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is very tempting, when coding your NYU scheduling app, to write code assuming there are two (major) semesters per year."}, "title": "tempting"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But commenting is no substitute for writing clear, readable code in the first place!"}, "title": "first"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is very tempting, when coding your NYU scheduling app, to write code assuming there are two (major) semesters per year."}, "title": "major"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Funcitons that perform a single job are simpler to understand, easier to change or eliminate, and render the overall system more comprehensible."}, "title": "render"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You might get away with writing day_of_week = day mod 7, since that number probably will never change."}, "title": "number"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test as completely by hand as you can: don't just test that your code fetches the data from the DB correctly: test that it still works properly if there is no data in the DB, or, indeed, if there is no DB!"}, "title": "fetches"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "(\"Properly\" here could mean \"Display an informative error message instead of crashing.\")"}, "title": "message"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Different languages have different conventions for how to name variables (camelCase, with_underscores, MixedCase, and so on), how to space operators, where to put braces, and so on."}, "title": "braces"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This is related to the previous principle, but focuses on the size of the one job that should be done."}, "title": "size"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Remember that we could, and once did, write code just as a sequence of 1s and 0s."}, "title": "1s"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "passed"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The upshot: you should look at your code as being every bit as much about communicating to humans as about directing a computer."}, "title": "upshot"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "bits"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This will be fine... until NYU adopts a tri-mester system."}, "title": "adopts"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The best explanation of what your code does is, if you write it correctly, your code itself."}, "title": "explanation"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It means that any part of your system that might ever need to change should have a single place where you can make the change."}, "title": "part"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "part"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't copy blocks of code to wherever you need them in your program: write a function and call it from each of those places."}, "title": "copy"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "So why bother with C, Java, or Python?"}, "title": "bother"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "classes"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "aesthetic"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "w2"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Programming FundamentalsOur modern digital creations are complex: a key job of programmers is to express that complexity as simply as possible."}, "title": "modern"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "And all higher-level languages need to be translated into such code in the end."}, "title": "higher-level"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No one who ever had a tax lien can sell their property, because the lien never gets cleared."}, "title": "sell"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "extracted"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But commenting is no substitute for writing clear, readable code in the first place!"}, "title": "substitute"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You should follow those conventions, unless there is a strong reason not to."}, "title": "unless"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It would make more sense to have create_tax_roll(), calculate_taxes(), send_bills(), record_payments(), and perhaps more."}, "title": "calculate_taxes"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Irregular indentation is a significant source of bugs, as people modifying the code will make mistakes, for example, about which else goes with which if."}, "title": "significant"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "extremely"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "later"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But you really ought to write hour_of_day = hour mod CLOCK_PERIOD, since both 12 and 24 hour timekeeping methods exist."}, "title": "timekeeping"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "traditional"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This is related to the previous principle, but focuses on the size of the one job that should be done."}, "title": "principle"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "came"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Different languages have different conventions for how to name variables (camelCase, with_underscores, MixedCase, and so on), how to space operators, where to put braces, and so on."}, "title": "came"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "particularly"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "fine"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This will be fine... until NYU adopts a tri-mester system."}, "title": "fine"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Instead, define a constant NUM_SEMS = 2."}, "title": "fine"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "find"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "find"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A more reasonable middle ground might be something like calc_tax_rate(), where an employee's W2 might be a parameter for the function."}, "title": "ground"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It would make more sense to have create_tax_roll(), calculate_taxes(), send_bills(), record_payments(), and perhaps more."}, "title": "record_payments"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "take_input_of_employee_w2_and_calculate_employee_tax_rate"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "writes"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "employee"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A more reasonable middle ground might be something like calc_tax_rate(), where an employee's W2 might be a parameter for the function."}, "title": "employee"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It means that any part of your system that might ever need to change should have a single place where you can make the change."}, "title": "means"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Programming FundamentalsOur modern digital creations are complex: a key job of programmers is to express that complexity as simply as possible."}, "title": "express"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Funcitons that perform a single job are simpler to understand, easier to change or eliminate, and render the overall system more comprehensible."}, "title": "overall"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "taxes"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "taxes"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A function named handle_yearly_taxes() is doing one job, but probably way to big a job."}, "title": "taxes"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It would make more sense to have create_tax_roll(), calculate_taxes(), send_bills(), record_payments(), and perhaps more."}, "title": "taxes"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "contain"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "ignored"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "liens"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "You might get away with writing day_of_week = day mod 7, since that number probably will never change."}, "title": "away"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "\"The best programs are written so that computing machines can perform them quickly and so that human beings can understand them clearly."}, "title": "written"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Programming FundamentalsOur modern digital creations are complex: a key job of programmers is to express that complexity as simply as possible."}, "title": "key"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But commenting is no substitute for writing clear, readable code in the first place!"}, "title": "commenting"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "called"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Programming FundamentalsOur modern digital creations are complex: a key job of programmers is to express that complexity as simply as possible."}, "title": "simply"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "unusual"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "\"The best programs are written so that computing machines can perform them quickly and so that human beings can understand them clearly."}, "title": "quickly"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "immense"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The upshot: you should look at your code as being every bit as much about communicating to humans as about directing a computer."}, "title": "much"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Irregular indentation is a significant source of bugs, as people modifying the code will make mistakes, for example, about which else goes with which if."}, "title": "else"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "cryptic"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This is a special case of DRY."}, "title": "case"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The upshot: you should look at your code as being every bit as much about communicating to humans as about directing a computer."}, "title": "look"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "-- Donald Knuth Lesson 1: Some programming fundamentalsHumans have been programming computers for seven or so decades now."}, "title": "decades"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "(\"Properly\" here could mean \"Display an informative error message instead of crashing.\")"}, "title": "error"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "guide"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "guide"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is a very good example of what a coding standard is like, and most of the guidelines can be applied in other languages."}, "title": "guide"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Different languages have different conventions for how to name variables (camelCase, with_underscores, MixedCase, and so on), how to space operators, where to put braces, and so on."}, "title": "with_underscores"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "-- Donald Knuth Lesson 1: Some programming fundamentalsHumans have been programming computers for seven or so decades now."}, "title": "seven"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "dictum"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't copy blocks of code to wherever you need them in your program: write a function and call it from each of those places."}, "title": "wherever"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A more reasonable middle ground might be something like calc_tax_rate(), where an employee's W2 might be a parameter for the function."}, "title": "middle"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Different languages have different conventions for how to name variables (camelCase, with_underscores, MixedCase, and so on), how to space operators, where to put braces, and so on."}, "title": "different"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "things"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Programming FundamentalsOur modern digital creations are complex: a key job of programmers is to express that complexity as simply as possible."}, "title": "complex"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is very tempting, when coding your NYU scheduling app, to write code assuming there are two (major) semesters per year."}, "title": "semesters"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "widely"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No one who ever had a tax lien can sell their property, because the lien never gets cleared."}, "title": "gets"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "difficult"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "docstrings"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "running"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "uses"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This is related to the previous principle, but focuses on the size of the one job that should be done."}, "title": "uses"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "characters"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "well"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Our JavaScript team is choosing a standard at present, and soon we will link to that here as well."}, "title": "well"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "claims"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Irregular indentation is a significant source of bugs, as people modifying the code will make mistakes, for example, about which else goes with which if."}, "title": "mistakes"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "\"The best programs are written so that computing machines can perform them quickly and so that human beings can understand them clearly."}, "title": "human"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "These languages exist for humans, not for computers: they make it easier for us to understand and reason about what a program will do."}, "title": "human"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The upshot: you should look at your code as being every bit as much about communicating to humans as about directing a computer."}, "title": "human"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This is related to the previous principle, but focuses on the size of the one job that should be done."}, "title": "previous"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "tables"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "For instance, if the county writes a tax program with a function called calc_taxes, it would be natural to eliminate that function if the job is later passed off to a microservice running on the cloud."}, "title": "instance"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Irregular indentation is a significant source of bugs, as people modifying the code will make mistakes, for example, about which else goes with which if."}, "title": "source"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It would make more sense to have create_tax_roll(), calculate_taxes(), send_bills(), record_payments(), and perhaps more."}, "title": "create_tax_roll"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A function named handle_yearly_taxes() is doing one job, but probably way to big a job."}, "title": "handle_yearly_taxes"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But you really ought to write hour_of_day = hour mod CLOCK_PERIOD, since both 12 and 24 hour timekeeping methods exist."}, "title": "ought"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "read"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Consistent indentation is especially important: it allows a reader of your code to easily line up blocks of control."}, "title": "read"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But commenting is no substitute for writing clear, readable code in the first place!"}, "title": "read"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Lesson 2: Python coding standardsFor this lesson, please read the Python coding standard, PEP 8."}, "title": "read"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A function named handle_yearly_taxes() is doing one job, but probably way to big a job."}, "title": "big"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Other ReadingsProgramming Best PracticesFollowing Coding Standards using Flake8"}, "title": "using"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "bit"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "The upshot: you should look at your code as being every bit as much about communicating to humans as about directing a computer."}, "title": "bit"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "ignore"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "(\"Properly\" here could mean \"Display an informative error message instead of crashing.\")"}, "title": "informative"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "And all higher-level languages need to be translated into such code in the end."}, "title": "translated"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "mathematical"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But you really ought to write hour_of_day = hour mod CLOCK_PERIOD, since both 12 and 24 hour timekeeping methods exist."}, "title": "methods"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Irregular indentation is a significant source of bugs, as people modifying the code will make mistakes, for example, about which else goes with which if."}, "title": "people"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "examples"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Our JavaScript team is choosing a standard at present, and soon we will link to that here as well."}, "title": "choosing"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "single-letter"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is very tempting, when coding your NYU scheduling app, to write code assuming there are two (major) semesters per year."}, "title": "assuming"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But, if the coders also happened to include the code to clear tax liens (county claims against the property for unpaid taxes) in the same function... Oops!"}, "title": "coders"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "models.py"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "communicate"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Funcitons that perform a single job are simpler to understand, easier to change or eliminate, and render the overall system more comprehensible."}, "title": "simpler"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "within"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is very tempting, when coding your NYU scheduling app, to write code assuming there are two (major) semesters per year."}, "title": "two"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "\"The best programs are written so that computing machines can perform them quickly and so that human beings can understand them clearly."}, "title": "beings"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Remember that we could, and once did, write code just as a sequence of 1s and 0s."}, "title": "sequence"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "long"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "long"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Our JavaScript team is choosing a standard at present, and soon we will link to that here as well."}, "title": "link"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Write an automated test to go with every program or new feature you write."}, "title": "automated"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Consistent indentation is especially important: it allows a reader of your code to easily line up blocks of control."}, "title": "line"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "line"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "It is a very good example of what a coding standard is like, and most of the guidelines can be applied in other languages."}, "title": "line"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "us"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No one who ever had a tax lien can sell their property, because the lien never gets cleared."}, "title": "us"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "This is related to the previous principle, but focuses on the size of the one job that should be done."}, "title": "us"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Comment judiciously."}, "title": "us"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "us"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Remember that we could, and once did, write code just as a sequence of 1s and 0s."}, "title": "us"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "These languages exist for humans, not for computers: they make it easier for us to understand and reason about what a program will do."}, "title": "us"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "us"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Test as completely by hand as you can: don't just test that your code fetches the data from the DB correctly: test that it still works properly if there is no data in the DB, or, indeed, if there is no DB!"}, "title": "us"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Other ReadingsProgramming Best PracticesFollowing Coding Standards using Flake8"}, "title": "us"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "convince"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "DevOps is a hot new topic in that practice, but the current popularity of the term does not mean we should ignore the many findings on how to write the best programs possible that came before DevOps should be ignored!"}, "title": "popularity"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "No magic constants."}, "title": "constant"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Instead, define a constant NUM_SEMS = 2."}, "title": "constant"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "\"The best programs are written so that computing machines can perform them quickly and so that human beings can understand them clearly."}, "title": "computing"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "But you really ought to write hour_of_day = hour mod CLOCK_PERIOD, since both 12 and 24 hour timekeeping methods exist."}, "title": "exist"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "These languages exist for humans, not for computers: they make it easier for us to understand and reason about what a program will do."}, "title": "exist"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Don't define your data tables in your database, and also in your code: find a way (like the Django models.py file) to define your data one place and use that definition to generate both the database and the code that uses the DB."}, "title": "file"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Go for the golden mean in naming."}, "title": "naming"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "On the other hand, naming a function something like take_input_of_employee_w2_and_calculate_employee_tax_rate() is absurdly long: please remember, other programmers will have to type your function names in order to call your functions!"}, "title": "naming"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "A programmer is ideally an essayist who works with traditional aesthetic and literary forms as well as mathematical concepts, to communicate the way that an algorithm works and to convince a reader that the results will be correct.\""}, "title": "ideally"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "book"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Programming FundamentalsOur modern digital creations are complex: a key job of programmers is to express that complexity as simply as possible."}, "title": "digital"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "explaining"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "stay"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Consistent indentation is especially important: it allows a reader of your code to easily line up blocks of control."}, "title": "important"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Different languages have different conventions for how to name variables (camelCase, with_underscores, MixedCase, and so on), how to space operators, where to put braces, and so on."}, "title": "variable"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Sometimes, names of functions and variables can be way too cryptic: there are examples in the widely used CLRS Algorithm book where I have found as many as six single-letter variable names used at once."}, "title": "variable"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Code should contain some comments, especially things like docstrings for classes that can be extracted to produce a guide to the system, and comments explaining what particularly tricky or unusual bits of code do."}, "title": "tricky"}, {"info": {"url": "http://127.0.0.1:8000/devops/basic", "page": "Programming Fundentmal", "sentence": "Such immense names also make it extremely difficult to stay within guidelines like PEP 8's dictum of \"no lines longer than 79 characters.\""}, "title": "longer"}]
>>>>>>> Stashed changes
